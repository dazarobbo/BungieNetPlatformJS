import ExtendableError from "extendable-error-class";

/**
 * Exception type generated by BungieNet.* classes
 */
export default class Error extends ExtendableError {


  /**
   * @param {String} message - error message
   * @param {Error.codes} code - error code
   * @param {*} data - any associated data
   */
  constructor(message = "", code = Error.codes.unknown, data = undefined) {
    super(message);
    this.code = code;
    this.data = data;
  }

}

/**
 * Associated exception codes for BungieNet.Error exceptions
 * @type {Object}
 */
Error.codes = {

  /**
   * Cookies cannot be found
   * @type {Number}
   */
  noCookieByName: 1,

  /**
   * Network failure
   * @type {Number}
   */
  networkError: 2,

  /**
   * Value required for X-CSRF header not found
   * @type {Number}
   */
  noCsrfToken: 3,

  /**
   * Response from bungie.net could not be parsed as valid JSON
   * @type {Number}
   */
  corruptResponse: 4,

  /**
   * An invalid cookie provider was set or used
   * @type {Number}
   */
  noCookieProvider: 5,

  /**
   * Generic error
   * @type {Number}
   */
  unknown: 6

};
