{"version":3,"sources":["../../src/Torch/Torch.User.js"],"names":["Torch","User","o","_data","_converted","Map","_convert","set","moment","duration","Date","getTime","firstAccess","lastUpdate","BigNumber","membershipId","toString","statusDate","uri","URI","profilePicturePath","is","BungieNet","base","resource","moments","map","d","length","max","Promise","getLocaleBase","then","segment","enums","bungieMembershipType","bungie_next","resolve","profileThemeName","filename","displayName","uniqueName","about","get","context","followerCount","followingUserCount","isDeleted","locale","localeInheritDefault","profilePicture","profileTheme","psnDisplayName","showActivity","showGroupMessaging","statusText","successMessageFlags","userTitle","userTitleDisplay","xboxDisplayName"],"mappings":"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","file":"Torch.User.js","sourcesContent":["/* globals Torch, BungieNet, moment */\r\nTorch.User = class {\r\n\r\n  /**\r\n   * Create a user, pass the bungie.net user object as param\r\n   * @param {Object} [o = {}]\r\n   */\r\n  constructor(o = {}) {\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this._data = o;\r\n\r\n    /**\r\n     * @type {Map}\r\n     */\r\n    this._converted = new Map();\r\n\r\n    this._convert();\r\n\r\n  }\r\n\r\n  /**\r\n   * @return {void}\r\n   */\r\n  _convert() {\r\n\r\n    this._converted.set(\r\n      \"accountAge\",\r\n      moment.duration(Date.getTime() - this._data.firstAccess)\r\n    );\r\n\r\n    this._converted.set(\r\n      \"firstAccess\",\r\n      moment(this._data.firstAccess)\r\n    );\r\n\r\n    this._converted.set(\r\n      \"lastUpdate\",\r\n      typeof this._data.lastUpdate !== \"undefined\" ?\r\n        moment(this._data.lastUpdate) :\r\n        null\r\n    );\r\n\r\n    this._converted.set(\r\n      \"membershipId\",\r\n      new BigNumber(this._data.membershipId.toString())\r\n    );\r\n\r\n    this._converted.set(\r\n      \"statusDate\",\r\n      typeof this._data.statusDate !== \"undefined\" ?\r\n        moment(this._data.statusDate) :\r\n        null\r\n    );\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get about() {\r\n    return this._data.about;\r\n  }\r\n\r\n  /**\r\n   * Duration the user has been a member\r\n   * @type {Duration}\r\n   */\r\n  get accountAge() {\r\n    return this._converted.get(\"accountAge\");\r\n  }\r\n\r\n  /**\r\n   * URI for the user's avatar\r\n   * @return {URI}\r\n   */\r\n  avatarLink() {\r\n\r\n    let uri = new URI(this._data.profilePicturePath);\r\n\r\n    if(uri.is(\"relative\")) {\r\n      uri = BungieNet.base.resource(uri.resource());\r\n    }\r\n\r\n    return uri;\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get context() {\r\n    return this._data.context;\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get displayName() {\r\n    return this._data.displayName;\r\n  }\r\n\r\n  /**\r\n   * Date of first access\r\n   * @type {Moment}\r\n   */\r\n  get firstAccess() {\r\n    return this._converted.get(\"firstAccess\");\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get followerCount() {\r\n    return this._data.followerCount;\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get followingUserCount() {\r\n    return this._data.followingUserCount;\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  get isDeleted() {\r\n    return this._data.isDeleted;\r\n  }\r\n\r\n  /**\r\n   * Most recent date the user's profile has changed\r\n   * @return {Moment|null}\r\n   */\r\n  getLastActive() {\r\n\r\n    let moments = [\r\n      this.firstAccess,\r\n      this.lastUpdate,\r\n      this.statusDate\r\n    ].map(d => d);\r\n\r\n    if(moments.length === 0) {\r\n      return null;\r\n    }\r\n    //else if(moments.length === 1){\r\n    //  return dates[0];\r\n    //}\r\n\r\n    return moment.max(moments);\r\n\r\n    //return moments.reduce((a, b) => {\r\n    //  return a > b ? a : b;\r\n    //});\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {Moment|null}\r\n   */\r\n  get lastUpdate() {\r\n    return this._converted.get(\"lastUpdate\");\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get locale() {\r\n    return this._data.locale;\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  get localeInheritDefault() {\r\n    return this._data.localeInheritDefault;\r\n  }\r\n\r\n  /**\r\n   * @type {BigNumber}\r\n   */\r\n  get membershipId() {\r\n    return this._converted.get(\"membershipId\");\r\n  }\r\n\r\n  /**\r\n   * Generate a URI to the user's profile\r\n   * @return {Promise}\r\n   */\r\n  getProfileLink() {\r\n    return new Promise(resolve => {\r\n      BungieNet.getLocaleBase().then(uri => {\r\n\r\n        uri\r\n          .segment(\"Profile\")\r\n          .segment(BungieNet.enums.bungieMembershipType.bungie_next.toString())\r\n          .segment(this.membershipId.toString());\r\n\r\n        return resolve(uri);\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get profilePicture() {\r\n    return this._data.profilePicture;\r\n  }\r\n\r\n  /**\r\n   * @return {URI}\r\n   */\r\n  getProfilePictureLink() {\r\n\r\n    let uri = new URI(this._data.profilePicturePath);\r\n\r\n    if(uri.is(\"relative\")) {\r\n      uri = BungieNet.base.resource(uri.resource());\r\n    }\r\n\r\n    return uri;\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get profilePicturePath() {\r\n    return this._data.profilePicturePath;\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get profileTheme() {\r\n    return this._data.profileTheme;\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get profileThemeName() {\r\n    return this._data.profileThemeName;\r\n  }\r\n\r\n  /**\r\n   * @return {URI}\r\n   */\r\n  getProfileThemeHeaderLink() {\r\n\r\n    return BungieNet\r\n      .base\r\n      .segment(\"img\")\r\n      .segment(\"UserThemes\")\r\n      .segment(this._data.profileThemeName)\r\n      .filename(\"header.jpg\");\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get psnDisplayName() {\r\n    return this._data.psnDisplayName;\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  get showActivity() {\r\n    return this._data.showActivity;\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   */\r\n  get showGroupMessaging() {\r\n    return this._data.showGroupMessaging;\r\n  }\r\n\r\n  /**\r\n   * @type {Moment|null}\r\n   */\r\n  get statusDate() {\r\n    return this._converted.get(\"statusDate\");\r\n  }\r\n\r\n  /**\r\n   * @type {String|null}\r\n   */\r\n  get statusText() {\r\n    return this._data.statusText;\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get successMessageFlags() {\r\n    return this._data.successMessageFlags;\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get uniqueName() {\r\n    return this._data.uniqueName;\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get userTitle() {\r\n    return this._data.userTitle;\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get userTitleDisplay() {\r\n    return this._data.userTitleDisplay;\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get xboxDisplayName() {\r\n    return this._data.xboxDisplayName;\r\n  }\r\n\r\n  /**\r\n   * @return {String}\r\n   */\r\n  toString() {\r\n    return `${this.displayName} (${this.uniqueName})`;\r\n  }\r\n\r\n};\r\n"]}