{"version":3,"sources":["../../src/Torch/Torch.Response.js"],"names":["Torch","Response","resp","obj","response","Object","keys","forEach","k","isError"],"mappings":";;;;;;AAAA;AACAA,MAAMC,QAAN;;AAEE;;;;AAIA,kBAAYC,IAAZ,EAA4B;AAAA;;AAAA,QAAVC,GAAU,uEAAJ,EAAI;;AAAA;;AAC1B,SAAKC,QAAL,GAAgBF,IAAhB;AACAG,WAAOC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyB;AAAA,aAAK,MAAKC,CAAL,IAAUL,IAAIK,CAAJ,CAAf;AAAA,KAAzB;AACD;;AAED;;;;;;AAXF;AAAA;AAAA,wBAegB;AACZ,aAAO,KAAKJ,QAAL,CAAcK,OAArB;AACD;AAjBH;;AAAA;AAAA","file":"Torch.Response.js","sourcesContent":["/* globals Torch */\r\nTorch.Response = class {\r\n\r\n  /**\r\n   * @param {BungieNet.Platform.Response} resp\r\n   * @param {Object} [obj={}]\r\n   */\r\n  constructor(resp, obj = {}) {\r\n    this.response = resp;\r\n    Object.keys(obj).forEach(k => this[k] = obj[k]);\r\n  }\r\n\r\n  /**\r\n   * Whether this response is an error\r\n   * @return {Boolean}\r\n   */\r\n  get isError() {\r\n    return this.response.isError;\r\n  }\r\n\r\n};\r\n"]}