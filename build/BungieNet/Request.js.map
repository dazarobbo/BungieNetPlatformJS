{"version":3,"sources":["../../src/BungieNet/Request.js"],"names":["Request","uri","method","data"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;IAYqBA,O;;AAEnB;;;;;AAKA,iBAAYC,GAAZ,EAAgD;AAAA,MAA/BC,MAA+B,uEAAtB,KAAsB;AAAA,MAAfC,IAAe,uEAAR,KAAK,CAAG;;AAAA;;AAC9C,OAAKF,GAAL,GAAWA,GAAX;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACD,C;;kBAXkBH,O;AAapB","file":"Request.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Platform.Request\r\n *\r\n * Pass an instance of this class to Platform._serviceRequest with\r\n * details of a specific endpoint. This class is intentionally basic.\r\n *\r\n * The URI should be relative to the base bungie.net platform path. For example,\r\n * \"/Activity/Following/Users/\" is correct, but\r\n * \"bungie.net/Platform/Activity/Following/Users/\" is not.\r\n *\r\n * This type complements Platform.Response.\r\n */\r\nexport default class Request {\r\n\r\n  /**\r\n   * @param  {URI} uri - relative URI from bungie.net/Platform\r\n   * @param  {String} [method = \"GET\"] - HTTP method\r\n   * @param  {String} [data = void 0] - data to send to the server\r\n   */\r\n  constructor(uri, method = \"GET\", data = void 0) {\r\n    this.uri = uri;\r\n    this.method = method;\r\n    this.data = data;\r\n  }\r\n\r\n};\r\n"]}