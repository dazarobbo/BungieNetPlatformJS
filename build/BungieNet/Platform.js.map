{"version":3,"sources":["../../src/BungieNet/Platform.js"],"names":["Platform","_options","defaultOptions","_frames","_frameManager","_plugins","Set","_internalCookieJar","jar","opts","_init","Object","keys","filter","x","forEach","frame","platformRequest","once","events","beforeSend","options","timeout","forever","gzip","headers","contentType","apiKey","listeners","_frameBeforeSend","httpSuccess","_frameHttpSuccess","httpError","_frameHttpError","httpDone","_frameHttpDone","responseParsed","_frameResponseParsed","error","_frameError","success","_frameSuccess","done","_frameDone","eventName","handler","on","call","p","entries","_queueFrame","_tryFrame","request","Promise","resolve","reject","logger","log","endpoint","uri","toString","frameId","id","platform","serviceResolve","serviceReject","platformPath","segment","path","setSearch","search","endsWith","_prepareRequest","state","active","execute","waiting","addFrame","maxConcurrent","getActive","size","getFrame","_activeFrame","args","update","apply","e","_notifyPlugins","frameBeforeSend","frameHttpError","frameHttpSuccess","target","frameHttpDone","frameResponseParsed","frameError","frameSuccess","response","frameDone","removeFrame","add","delete","_serviceRequest","p1","p2","expand","membershipId","membershipType","excludeBungieNet","username","q","page","searchTerm","p3","ackId","membersTo","body","membersToId","map","bn","conversationId","after","before","pow","minus","groupId","messageId","invitationId","invitationResponseState","subject","careerId","head","itemsPerPage","currentPage","itemsperpage","currentpage","query","searchtext","cType","tag","searchText","ctype","types","post","postId","category","disableBits","isGroupPostPrivate","metata","metadata","tagCategory","tagInput","urlLinkOrImage","p4","partialTag","partialtag","quantity","tagsSinceDate","childPostId","showBanned","showbanned","parentPostId","pageSize","replySize","getParentPost","rootThreadMode","sortMode","contentId","group","sort","quickDate","categoryFilter","tagString","tagstring","answerPostId","questionTopicId","answer","question","moderatedItemId","reason","comments","moderatedItemType","enums","affectedItemType","requestedPunishment","ban","pollId","optionIndex","rating","topicId","typeFilter","format","typefilter","message","membershipIds","comment","length","allyGroupId","details","name","about","groupName","groupAbout","clanMembershipType","groupMembershipType","clanPlatformType","clanName","followGroupId","clanOnly","populateFriends","clanonly","populatefriends","memberType","platformType","nameSearch","params","title","targetIds","messageContent","ignoredItemId","ignoredItemType","itemContextId","itemContextType","moderatorRequest","ModeratorRequest","membershipFilter","startDate","endDate","startdate","enddate","reportId","banLength","result","tokenType","redeemCode","itemId","characterId","itemIds","destinyMembershipId","mode","destinyActivityModeType","none","count","modes","statid","maxtop","definitionType","definitionId","version","flavour","single","mType","dMID","cId","pType","periodType","mds","join","grps","groups","mstart","monthStart","mend","monthEnd","dstart","dayStart","dend","dayEnd","itemInstanceId","code","displayName","ignoreCase","ignorecase","activityInstanceId","vendorId","recordBookHash","accountId","itemReferenceHash","stackSize","transferToVault","modeHash","partnershipType","mId","includeStreaming","includestreaming","cookieJar","ok","mc","getWaiting","activeFrame","queuedFrame"],"mappings":"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","file":"Platform.js","sourcesContent":["\"use strict\";\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport BungieNet from \"./BungieNet.js\";\r\nimport Frame from \"./Frame.js\";\r\nimport FrameSet from \"./FrameSet.js\";\r\nimport FrameManager from \"./FrameManager\";\r\nimport PlatformRequest from \"./PlatformRequest\";\r\nimport request from \"request\";\r\nimport Request from \"./Request.js\";\r\nimport URI from \"urijs\";\r\nimport URITemplate from \"urijs/src/URITemplate\";\r\n\r\n/**\r\n * Platform\r\n *\r\n * @param {Object} [opts = {}]\r\n * @param {String} [opts.apiKey = \"\"] bungie.net API key\r\n * @param {Number} [opts.maxConcurrent = -1] - maximum concurrent requests, default is no limit\r\n * @param {Number} [opts.timeout = 5000] - network timeout in milliseconds\r\n *\r\n * Notes:\r\n *\r\n * ===== Plugins =====\r\n * Plugins extend and dictate the operation of the platform. A platform instance\r\n * can have 0 or more plugins.\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * @example\r\n * let p = new Platform({\r\n *  apiKey: \"api-key-here\"\r\n * });\r\n *\r\n * p.timeout = 10000; //10 seconds\r\n *\r\n * p.getPublicAdvisorsV2().then(r => {\r\n * \t//Platform.Response\r\n * }, frame => {\r\n * \t//Platform.Frame\r\n * });\r\n *\r\n */\r\nexport default class Platform {\r\n\r\n  /**\r\n   * Initialise objects\r\n   */\r\n  _init() {\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this._options = Platform.defaultOptions;\r\n\r\n    /**\r\n     * @type {Platform.FrameSet}\r\n     */\r\n    this._frames = new FrameSet();\r\n\r\n    /**\r\n     * @type {Platform.FrameManager}\r\n     */\r\n    this._frameManager = new FrameManager(this._frames);\r\n\r\n    /**\r\n     * @type {Set<Platform.Plugin>}\r\n     */\r\n    this._plugins = new Set();\r\n\r\n    /**\r\n     * Instance-specific cookie store\r\n     * @type {Object}\r\n     */\r\n    this._internalCookieJar = request.jar();\r\n\r\n  }\r\n\r\n  constructor(opts = {}) {\r\n\r\n    this._init();\r\n\r\n    //copy any value in opts to this._options\r\n    //only copy matching keys\r\n    //DON'T use hasOwnProperty - opts could be any object and that's OK\r\n    //\r\n    //NOTE: Object.assign is shallow; defaults are primitives anyway so it's OK\r\n    Object.keys(this._options)\r\n      .filter(x => x in opts)\r\n      .forEach(x => this._options[x] = opts[x]);\r\n\r\n  }\r\n\r\n  /**\r\n   * Prepares the request and queues it\r\n   * @param {Platform.Frame} frame\r\n   * @return {Promise.<Platform.Frame>}\r\n   */\r\n  _prepareRequest(frame) {\r\n\r\n    frame.platformRequest = new PlatformRequest(frame);\r\n\r\n    //set up a beforeSend handler to add other details\r\n    frame.platformRequest.once(PlatformRequest.events.beforeSend, () => {\r\n\r\n      const opts = frame.platformRequest.options;\r\n\r\n      opts.timeout = this._options.timeout;\r\n      opts.forever = true;\r\n      opts.gzip = true;\r\n      opts.headers[Platform.headers.contentType] = Platform.contentType;\r\n      opts.headers[Platform.headers.apiKey] = this._options.apiKey;\r\n\r\n    });\r\n\r\n    //listen for frame info\r\n    const listeners = {\r\n        [PlatformRequest.events.beforeSend]: this._frameBeforeSend,\r\n        [PlatformRequest.events.httpSuccess]: this._frameHttpSuccess,\r\n        [PlatformRequest.events.httpError]: this._frameHttpError,\r\n        [PlatformRequest.events.httpDone]: this._frameHttpDone,\r\n        [PlatformRequest.events.responseParsed]: this._frameResponseParsed,\r\n        [PlatformRequest.events.error]: this._frameError,\r\n        [PlatformRequest.events.success]: this._frameSuccess,\r\n        [PlatformRequest.events.done]: this._frameDone\r\n    };\r\n\r\n    for(let [eventName, handler] of Object.entries(listeners)) {\r\n      frame.platformRequest.on(eventName, p => handler.call(this, p));\r\n    }\r\n\r\n    //queue it, then try the queue\r\n    this._queueFrame(frame)\r\n    this._tryFrame();\r\n\r\n  }\r\n\r\n  /**\r\n   * API-level request method\r\n   * @param  {Platform.Request} request\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  _serviceRequest(request) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const frame = new Frame();\r\n\r\n      BungieNet.logger.log(\"info\", \"Received service request\", {\r\n        endpoint: request.uri.toString(),\r\n        frameId: frame.id\r\n      });\r\n\r\n      frame.platform = this;\r\n      frame.request = request;\r\n      frame.serviceResolve = resolve;\r\n      frame.serviceReject = reject;\r\n\r\n      //construct the full path\r\n      //copy any query string params\r\n      //add the locale\r\n      frame.request.uri =\r\n        BungieNet.platformPath\r\n        .segment(request.uri.path())\r\n        .setSearch(request.uri.search(true));\r\n\r\n      //urijs is smart enough to remove the trailing forwards-slash\r\n      //so add it back in manually\r\n      if(!frame.request.uri.path().endsWith(\"/\")) {\r\n        frame.request.uri.path(frame.request.uri.path() + \"/\");\r\n      }\r\n\r\n      this._prepareRequest(frame);\r\n\r\n    });\r\n  }\r\n\r\n  _activeFrame(frame) {\r\n\r\n    BungieNet.logger.log(\"verbose\", \"Frame is active\", {\r\n      frameId: frame.id\r\n    });\r\n\r\n    frame.state = Frame.state.active;\r\n    frame.platformRequest.execute();\r\n\r\n  }\r\n\r\n  _queueFrame(frame) {\r\n\r\n    BungieNet.logger.log(\"verbose\", \"Frame queued\", {\r\n      frameId: frame.id\r\n    });\r\n\r\n    frame.state = Frame.state.waiting;\r\n    this._frameManager.addFrame(frame);\r\n\r\n  }\r\n\r\n  /**\r\n   * Attempts to begin a request, taking any conditiions into account\r\n   * @return {Promise}\r\n   */\r\n  _tryFrame() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      BungieNet.logger.log(\"verbose\", \"Trying for a frame...\");\r\n\r\n      //check if too many ongoing requests\r\n      if(this._options.maxConcurrent >= 0) {\r\n        if(this._frameManager.getActive().size >= this._options.maxConcurrent) {\r\n          BungieNet.logger.log(\"warn\", \"Cannot get a frame - too many active requests\");\r\n          return reject();\r\n        }\r\n      }\r\n\r\n      const frame = this._frameManager.getFrame();\r\n\r\n      if(frame === null) {\r\n        return reject();\r\n      }\r\n\r\n      return Promise.resolve(this._activeFrame(frame));\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates plugins with the given event name and any data\r\n   * @param {String} eventName\r\n   * @param {*[]} args - array of arguments to be passed to plugin function\r\n   * @return {Promise}\r\n   */\r\n  _notifyPlugins(eventName, ...args) {\r\n    for(const p of this._plugins) {\r\n      p.update.apply(p, [eventName, ...args]);\r\n    }\r\n  }\r\n\r\n\r\n  _frameBeforeSend(e) {\r\n    this._notifyPlugins(Platform.events.frameBeforeSend, e);\r\n  }\r\n\r\n  _frameHttpError(e) {\r\n    this._notifyPlugins(Platform.events.frameHttpError, e);\r\n  }\r\n\r\n  _frameHttpSuccess(e) {\r\n    this._notifyPlugins(Platform.events.frameHttpSuccess, e);\r\n  }\r\n\r\n  _frameHttpDone(e) {\r\n    e.target.frame.state = Frame.state.done;\r\n    this._notifyPlugins(Platform.events.frameHttpDone, e);\r\n  }\r\n\r\n  _frameResponseParsed(e) {\r\n    this._notifyPlugins(Platform.events.frameResponseParsed, e);\r\n  }\r\n\r\n  _frameError(e) {\r\n    this._notifyPlugins(Platform.events.frameError, e);\r\n    e.target.frame.serviceReject();\r\n    this._frameDone(e);\r\n  }\r\n\r\n  _frameSuccess(e) {\r\n    this._notifyPlugins(Platform.events.frameSuccess, e);\r\n    e.target.frame.serviceResolve(e.target.frame.response);\r\n    this._frameDone(e);\r\n  }\r\n\r\n  _frameDone(e) {\r\n    this._notifyPlugins(Platform.events.frameDone, e);\r\n    this._frameManager.removeFrame(e.target.frame);\r\n  }\r\n\r\n\r\n  /// Platform Options\r\n\r\n  /**\r\n   * Number of active requests\r\n   * @return {Number}\r\n   */\r\n  get activeRequestCount() {\r\n    return this._frameManager.getActive().size;\r\n  }\r\n\r\n  addPlugin(p) {\r\n    this._plugins.add(p);\r\n  }\r\n\r\n  removePlugin(p) {\r\n    this._plugins.delete(p);\r\n  }\r\n\r\n  get cookieJar() {\r\n    return this._options.cookieJar;\r\n  }\r\n\r\n  set cookieJar(ok) {\r\n    this._options.cookieJar = ok;\r\n  }\r\n\r\n  get internalCookieJar() {\r\n    return this._internalCookieJar;\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get maxConcurrent() {\r\n    return this._options.maxConcurrent;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} mc\r\n   * @type {Number}\r\n   */\r\n  set maxConcurrent(mc) {\r\n    this._options.maxConcurrent = mc;\r\n    this._tryFrame();\r\n  }\r\n\r\n  /**\r\n   * Number of queued requests\r\n   * @return {Number}\r\n   */\r\n  get queuedCount() {\r\n    return this._frameManager.getWaiting().size;\r\n  }\r\n\r\n  /**\r\n   * Timeout for requests to the platform in milliseconds\r\n   * @return {[type]} [description]\r\n   */\r\n  get timeout() {\r\n    return this._options.timeout;\r\n  }\r\n\r\n  /**\r\n   * @param  {Number} timeout\r\n   */\r\n  set timeout(timeout) {\r\n    this._options.timeout = timeout;\r\n  }\r\n\r\n\r\n\r\n  /// Application Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  applicationSearch() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/Search/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  changeApiKeyStatus(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/ChangeApiKeyState/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createApiKey(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/CreateApiKey/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createApplication() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/CreateApplication/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editApplication(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/EditApplication/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccessTokensFromCode() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/GetAccessTokensFromCode/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccessTokensFromRefreshToken() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/GetAccessTokensFromRefreshToken/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApplication(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/Application/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApplicationApiKeys(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/ApplicationApiKeys/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAuthorizationForUserAndApplication(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/Authorization/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAuthorizations(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/Authorizations/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  privateApplicationSearch() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/PrivateSearch/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  revokeAuthorization(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/RevokeAuthorization/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// User Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/CreateUser/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editSuccessMessageFlags(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/MessageFlags/Success/Update/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableAvatars() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetAvailableAvatars/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableAvatarsAdmin(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetAvailableAvatarsAdmin/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableThemes() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetAvailableThemes/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {BigNumber} membershipId\r\n   * @param  {BungieNet.enums.bungieMembershipType} membershipType\r\n   */\r\n  getBungieAccount(membershipId, membershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetBungieAccount/{membershipId}/{membershipType}/\", {\r\n          membershipId: membershipId.toString(),\r\n          membershipType: membershipType\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId - bungie.net memberId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBungieNetUserById(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetBungieNetUserById/{membershipId}/\", {\r\n        membershipId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCountsForCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetCounts/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    credentialType: 2,\r\n   *    credentialDisplayName: \"Psnid\",\r\n   *    isPublic: false\r\n   *  },\r\n   *  {\r\n   *    ...\r\n   *  }\r\n   * ]\r\n   */\r\n  getCredentialTypesForAccount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetCredentialTypesForAccount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  destinyAccounts: [],\r\n   *  bungieNetUser: {},\r\n   *  clans: [],\r\n   *  relatedGroups: {},\r\n   *  destinyAccountErrors: []\r\n   * }\r\n   */\r\n  getCurrentBungieAccount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetCurrentBungieAccount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetBungieNetUser/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    AppInstallationId: \"-guid-\",\r\n   *    AppType: \"BnetMobile\",\r\n   *    DeviceName: \"Nexus\",\r\n   *    DeviceType: 3,\r\n   *    MembershipId: \"-bungie.net membership id-\",\r\n   *    MembershipType: \"-bnext enum-\",\r\n   *    PairId: \"-BigNumber-\",\r\n   *    PairingDate: \"iso date string\"\r\n   *  }\r\n   * ]\r\n   */\r\n  getMobileAppPairings() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetMobileAppPairings/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example {@see getMobileAppPairings}\r\n   */\r\n  getMobileAppPairingsUncached() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetMobileAppPairingsUncached/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    notificationSettingId: \"-BigNumber-\",\r\n   *    membershipId: \"-BigNumber-\",\r\n   *    optInFlags: \"\",\r\n   *    scheduleFlags: 0,\r\n   *    notificationMethod: \"-BigNumber-\",\r\n   *    notificationType: \"-BigNumber-\",\r\n   *    displayName: \"New Messages\",\r\n   *    settingDescription: \"Tell me if I have a new Bungie.net Private Message\",\r\n   *    possibleMethods: 7\r\n   *  },\r\n   *  ...\r\n   * ]\r\n   */\r\n  getNotificationSettings() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetNotificationSettings/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPartnerships(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/{p1}/Partnerships/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    apiKey: \"hex\",\r\n   *    ownerMembershipId: \"0\",\r\n   *    creationDate: \"iso date string\",\r\n   *    expirationDate: \"iso date string\",\r\n   *    apiEulaVersion: 1\r\n   *  }\r\n   * ]\r\n   */\r\n  getPlatformApiKeysForUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetPlatformApiKeysForUser/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: \"/ExpireWebAuth.ashx?...\"\r\n   */\r\n  getSignOutUrl() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetSignOutUrl/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId - bungie.net membership id\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: []\r\n   */\r\n  getUserAliases(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetUserAliases/{membershipId}/\", {\r\n        membershipId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [excludeBungieNet = false] - exclude bungie.net member id\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  -id-as-key-: -membership-type-as-value-,\r\n   *  ...\r\n   * }\r\n   */\r\n  getUserMembershipIds(excludeBungieNet = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetMembershipIds/{?excludebungienet}\", {\r\n        excludeBungieNet: excludeBungieNet\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  linkOverride() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/LinkOverride/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  registerMobileAppPair() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/RegisterMobileAppPair/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {*} p1\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  removePartnership(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/Partnerships/{p1}/Remove/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} username - query to search for\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  { user information },\r\n   *  ...\r\n   * ]\r\n   */\r\n  searchUsers(username) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/SearchUsers/{?q}\", {\r\n        q: username\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} username - search query\r\n   * @param {Number} [page = 1] - 1-based page number\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example {@see searchUsers}\r\n   */\r\n  searchUsersPaged(username, page = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/SearchUsersPaged/{searchTerm}/{page}/\", {\r\n        searchTerm: username,\r\n        page: page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} username - search query\r\n   * @param {Number} [page = 1] 1-based page number\r\n   * @param {*} [p3 = null] UNKNOWN\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example {@see SearchUsersPaged}\r\n   */\r\n  searchUsersPagedV2(username, page = 1, p3 = null) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/SearchUsersPaged/{searchTerm}/{page}/{p3}/\", {\r\n        searchTerm: username,\r\n        page: page,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setAcknowledged(ackId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/Acknowledged/{ackId}/\", {\r\n        ackId: ackId\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unregisterMobileAppPair(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/UnregisterMobileAppPair/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateDestinyEmblemAvatar() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/UpdateDestinyEmblemAvatar/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateNotificationSetting() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/Notification/Update/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateStateInfoForMobileAppPair() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/UpdateStateInfoForMobileAppPair/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Updates the user with the given options\r\n   * @link https://destinydevs.github.io/BungieNetPlatform/docs/UserService/UpdateUser#/JSON-POST-Parameters\r\n   * @param  {Object} opts\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateUser(opts) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/UpdateUser/\"),\r\n      \"POST\",\r\n      opts\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateUserAdmin(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/UpdateUserAdmin/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Message Service\r\n\r\n  /**\r\n   * @param {BigNumber[]} membersTo - array of memberIDs\r\n   * @param {String} body - body of the message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createConversation(membersTo, body) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/CreateConversation/\"),\r\n      \"POST\",\r\n      {\r\n        membersToId: membersTo.map(bn => bn.toString()),\r\n        body: body\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createConversationV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/CreateConversationV2/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllianceInvitedToJoinInvitations(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/AllianceInvitations/InvitationsToJoinAnotherGroup/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllianceJoinInvitations(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/AllianceInvitations/RequestsToJoinYourGroup/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationById(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationById/{conversationId}/\", {\r\n        conversationId: conversationId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {BigNumber} conversationId - conversation id\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationByIdV2(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationByIdV2/{id}/\", {\r\n        id: conversationId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV2(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV2/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV3(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV3/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV4(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV4/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {Number} [page = 1]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV5(page = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV5/{page}/\", {\r\n        page: page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationThreadV2(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationThreadV2/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Get a page of a conversation\r\n   * @param  {BigNumber} id - conversation id\r\n   * @param  {Number} [page = 1] - page to return\r\n   * @param  {BigNumber} [before = (2^63) - 1] - message id filter\r\n   * @param  {BigNumber} [after = 0] - message id filter\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationThreadV3(\r\n    id,\r\n    page = 1,\r\n    after = new BigNumber(\"0\"),\r\n    before = (new BigNumber(2)).pow(63).minus(1)\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\r\n        \"/Message/GetConversationThreadV3/{id}/{page}/{?after,before}\", {\r\n        id: id.toString(),\r\n        page: page,\r\n        after: after.toString(),\r\n        before: before.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationWithMemberId(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationWithMember/{id}/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationWithMemberIdV2(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationWithMemberV2/{id}/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {Number} [page = 1] - 1-based\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupConversations(page = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetGroupConversations/{page}/\", {\r\n        page: page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getInvitationDetails(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/{p1}/Details/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTotalConversationCount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetTotalConversationCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadConversationCountV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetUnreadPrivateConversationCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadConversationCountV3() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetTotalConversationCountV3/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadConversationCountV4() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetUnreadConversationCountV4/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadGroupConversationCount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetUnreadGroupConversationCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Leave a given conversation by id\r\n   * @param  {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  leaveConversation(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/LeaveConversation/{id}/\", {\r\n        id: conversationId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} messageId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderateGroupWall(groupId, messageId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/ModerateGroupWall/{groupId}/{messageId}/\"),\r\n      \"POST\",\r\n      {\r\n        groupId: groupId.toString(),\r\n        messageId: messageId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewAllInvitations(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/ReviewAllDirect/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewInvitation(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewInvitationDirect(invitationId, invitationResponseState) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/ReviewDirect/{id}/{state}/\", {\r\n        id: invitationId,\r\n        state: invitationResponseState\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewInvitations(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/ReviewListDirect/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  saveMessageV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/SaveMessageV2/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Add a message to a conversation\r\n   * @param  {String} body\r\n   * @param  {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  saveMessageV3(body, conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/SaveMessageV3/\"),\r\n      \"POST\",\r\n      {\r\n        body: body,\r\n        conversationId: conversationId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Currently used by bungie.net to save a message to a group wall\r\n   * @param {String} body\r\n   * @param {BigNumber} conversationId\r\n   * @param {String} [subject = \"\"]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  saveMessageV4(conversationId, body, subject = \"\") {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/SaveMessageV4/\"),\r\n      \"POST\",\r\n      {\r\n        conversationId: conversationId.toString(),\r\n        body: body,\r\n        subject: subject\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateConversationLastViewedTimestamp() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/Conversation/UpdateLastViewedTimestamp/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Signal that the current user is typing a message\r\n   *\r\n   * Bungie.net sends a number as the conversationId rather than as a string,\r\n   * but both appear to work\r\n   *\r\n   * @param  {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  userIsTyping(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/UserIsTyping/\"),\r\n      \"POST\",\r\n      {\r\n        conversationId: conversationId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Notification Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRealTimeEvents(p1, p2, timeout) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Notification/Events/{p1}/{p2}/{?timeout}\", {\r\n        timeout: timeout\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  getRecentNotificationCount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Notification/GetCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecentNotifications() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Notification/GetRecent/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  resetNotification() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Notification/Reset/\")\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Content Service\r\n\r\n  /**\r\n   * @param {BigNumber} careerId\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  careerId: \"44767\",\r\n   *  title: \"Lead Weapons and Vehicles Artist\",\r\n   *  category: \"Art\",\r\n   *  categoryTag: \"art\",\r\n   *  tags: [],\r\n   *  detail: \"-html-string-\"\r\n   * }\r\n   */\r\n  getCareer(careerId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Careers/{id}/\", {\r\n        id: careerId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  categories: [\r\n   *    {\r\n   *      categoryName: \"Art\",\r\n   *      tag: \"art\",\r\n   *      careers: [\r\n   *        {\r\n   *          careerId: \"44767\",\r\n   *          title: \"Lead Weapons and Vehicle Artist \"\r\n   *        }\r\n   *        ...\r\n   *      ]\r\n   *    }\r\n   *    ...\r\n   *  ]\r\n   * }\r\n   */\r\n  getCareers() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Content/Careers/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getContentById(p1, p2, head) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/GetContentById/{p1}/{p2}/{?head}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        head: head\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getContentByTagAndType(p1, p2, p3, head) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/GetContentByTagAndType/{p1}/{p2}/{p3}/{?,head}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3,\r\n        head: head\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getContentType(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/GetContentType/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyContent(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Destiny/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyContentV2(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Destiny/V2/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFeaturedArticle() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Content/Site/Featured/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHomepageContent(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Homepage/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHomepageContentV2() {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Homepage/V2/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJobs(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Jobs/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getNews(p1, p2, itemsPerPage, currentPage = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/News/{p1}/{p2}/{?itemsperpage,currentpage}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPromoWidget() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Content/Site/Destiny/Promo/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublications(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Publications/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} query - search query\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchCareers(query) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Careers/Search/{?searchtext}\", {\r\n        searchtext: query\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchContentByTagAndType(p1, p2, p3, head, currentPage, itemsPerPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/SearchContentByTagAndType/{p1}/{p2}/{p3}/{?head,currentpage,itemsperpage}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3,\r\n        head: head,\r\n        currentpage: currentPage,\r\n        itemsperpage: itemsPerPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchContentEx(p1, head) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/SearchEx/{p1}/{?,head}\", {\r\n        p1: p1,\r\n        head: head\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchContentWithText(p1, head, cType, tag, currentPage, searchText) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Homepage/{p1}/{?head,ctype,tag,currentpage,searchtext}/\", {\r\n        p1: p1,\r\n        head: head,\r\n        ctype: cType,\r\n        tag: tag,\r\n        currentpage: currentPage,\r\n        searchtext: searchText\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// ExternalSocial Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAggregatedSocialFeed(p1, types) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/ExternalSocial/GetAggregatedSocialFeed/{p1}/{?,types}\", {\r\n        p1: p1,\r\n        types: types\r\n      })\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Survey Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getSurvey() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Survey/GetSurvey/\")\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Forum Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveFireteamThread(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/Approve/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  changeLockState(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/ChangeLockState/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  changePinState(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/ChangePinState/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createContentComment() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Forum/CreateContentComment/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * When creating a poll, set post.metadata to a JSON-encoded string array of\r\n   * options. For example, if the options are Yes, No, and Maybe, post.metadata\r\n   * would be set to \"[\"Yes\",\"No\",\"Maybe\"]\". The square brackets are included.\r\n   *\r\n   * @param {Object} post\r\n   * @param {String} post.body\r\n   * @param {Number} post.category - which enum for this? flags?\r\n   * @param {Number} post.groupId\r\n   * @param {Boolean} post.isGroupPrivate\r\n   * @param {String|null} post.metadata - null\r\n   * @param {BigNumber} post.parentPostId - postId being replied to\r\n   * @param {Number} post.playerSupportFlags\r\n   * @param {null} post.playerSupportMetadata\r\n   * @param {BigNumber} post.recruitIntensity\r\n   * @param {Boolean} post.recruitMicrophoneRequired - null?\r\n   * @param {BigNumber} post.recruitSlots\r\n   * @param {BigNumber} post.recruitTone\r\n   * @param {Boolean} post.subTopicOverride\r\n   * @param {String} post.subject\r\n   * @param {String} post.tagCategory\r\n   * @param {String} post.tagInput - comma separated\r\n   * @param {String} post.urlLinkOrImage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createPost(post) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Forum/CreatePost/\"),\r\n      \"POST\",\r\n      post\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  deletePost(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/DeletePost/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {Object} post\r\n   * @param {String} [post.body = \"\"]\r\n   * @param {Number} [post.category = 0] - enum?\r\n   * @param {Number} [post.disableBits = 64] - enum for this?\r\n   * @param {Boolean} [post.isGroupPostPrivate = false]\r\n   * @param {String|null} [post.metadata = null]\r\n   * @param {String} [post.subject = \"\"]\r\n   * @param {String} [post.tagCategory = \"\"]\r\n   * @param {String} [post.tagInput = \"\"]\r\n   * @param {String} [post.urlLinkOrImage = \"\"]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editPost(postId, post) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/EditPost/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        body: post.body,\r\n        category: post.category,\r\n        disableBits: post.disableBits,\r\n        isGroupPostPrivate: post.isGroupPostPrivate,\r\n        metata: post.metadata,\r\n        subject: post.subject,\r\n        tagCategory: post.tagCategory,\r\n        tagInput: post.tagInput,\r\n        urlLinkOrImage: post.urlLinkOrImage\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCoreTopicsPaged(p1, p2, p3, p4) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetCoreTopicsPaged/{p1}/{p2}/{p3}/{p4}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3,\r\n        p4: p4\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumTagCountEstimate(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetForumTagCountEstimate/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumTagSuggestions(partialTag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetForumTagSuggestions/{p1}/{?,partialtag}\", {\r\n        partialtag: partialTag\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId - postId of the post containing the poll\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPoll(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Poll/{postId}/\", {\r\n        postId: postId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} quantity\r\n   * @param {*} tagsSinceDate\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPopularTags(quantity, tagsSinceDate) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPopularTags/{?quantity,tagsSinceDate}\", {\r\n        quantity: quantity,\r\n        tagsSinceDate: tagsSinceDate\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} childPostId\r\n   * @param {Boolean} [showBanned = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostAndParent(childPostId, showBanned = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostAndParent/{childPostId}/{?showbanned}\", {\r\n        childPostId: childPostId.toString(),\r\n        showbanned: showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostAndParentAwaitingApproval(childPostId, showBanned) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostAndParentAwaitingApproval/{childPostId}/{?,showbanned}\", {\r\n        childPostId: childPostId,\r\n        showbanned: showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostsThreadedPaged(\r\n    parentPostId,\r\n    page,\r\n    pageSize,\r\n    replySize,\r\n    getParentPost,\r\n    rootThreadMode,\r\n    sortMode,\r\n    showBanned\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostsThreadedPaged/{parentPostId}/{page}/{pageSize}/{replySize}/{getParentPost}/{rootThreadMode}/{sortMode}/{?showbanned}\", {\r\n        parentPostId: parentPostId,\r\n        page: page,\r\n        pageSize: pageSize,\r\n        replySize: replySize,\r\n        getParentPost: getParentPost,\r\n        rootThreadMode: rootThreadMode,\r\n        sortMode: sortMode,\r\n        showbanned: showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostsThreadedPagedFromChild(\r\n    childPostId,\r\n    page,\r\n    pageSize,\r\n    replySize,\r\n    rootThreadMode,\r\n    sortMode,\r\n    showBanned\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostsThreadedPagedFromChild/{childPostId}/{page}/{pageSize}/{replySize}/{rootThreadMode}/{sortMode}/{?showbanned}\", {\r\n        childPostId: childPostId,\r\n        page: page,\r\n        pageSize: pageSize,\r\n        replySize: replySize,\r\n        rootThreadMode: rootThreadMode,\r\n        sortMode: sortMode,\r\n        showbanned: showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecruitmentThreadSummaries() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Forum/Recruit/Summaries/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTopicForContent(contentId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetTopicForContent/{contentId}/\", {\r\n        contentId: contentId\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTopicsPaged(\r\n    page,\r\n    pageSize,\r\n    group,\r\n    sort,\r\n    quickDate,\r\n    categoryFilter,\r\n    tagString\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetTopicsPaged/{page}/{pageSize}/{group}/{sort}/{quickDate}/{categoryFilter}/{?tagstring}\", {\r\n        page: page,\r\n        pageSize: pageSize,\r\n        group: group,\r\n        sort: sort,\r\n        quickDate: quickDate,\r\n        categoryFilter: categoryFilter,\r\n        tagstring: tagString\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  joinFireteamThread(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/Join/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  kickBanFireteamApplicant(postId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/{postId}/{membershipId}/\", {\r\n        postId: postId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  leaveFireteamThread(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/Leave/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} answerPostId\r\n   * @param {BigNumber} questionTopicId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  markReplyAsAnswer(answerPostId, questionTopicId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/MarkReplyAsAnswer/{answer}/{question}/\", {\r\n        answer: answerPostId.toString(),\r\n        question: questionTopicId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {BigNumber} moderatedItemId\r\n   * @param {Number} reason\r\n   * @param {String} [comments = \"group post ban\"]\r\n   * @param {BungieNet.enums.affectedItemType} [moderatedItemType = BungieNet.enums.affectedItemType.post]\r\n   * @param {BungieNet.enums.requestedPunishment} [requestedPunishment = BungieNet.enums.requestedPunishment.ban]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderateGroupPost(\r\n    postId,\r\n    moderatedItemId,\r\n    reason = 1,\r\n    comments = \"group post ban\",\r\n    moderatedItemType = BungieNet.enums.affectedItemType.post,\r\n    requestedPunishment = BungieNet.enums.requestedPunishment.ban\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Post/{postId}/GroupModerate/\", {\r\n        postId: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        comments: comments,\r\n        moderatedItemId: moderatedItemId.toString(),\r\n        moderatedItemType: moderatedItemType,\r\n        reason: reason,\r\n        requestedPunishment: requestedPunishment\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderatePost(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Post/{p1}/Moderate/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderateTag(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Tags/{p1}/Moderate/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * - payload is set to null, this may result in a bug\r\n   * @param {BigNumber} pollId\r\n   * @param {Number} optionIndex - 0-based index of the option being voted for\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  pollVote(pollId, optionIndex) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Poll/Vote/{pollId}/{index}/\", {\r\n        pollId: pollId.toString(),\r\n        optionIndex: optionIndex\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {Number} rating - 0 to 100, currently only 0 OR 100\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  ratePost(postId, rating) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/RatePost/{postId}/{rating}/\", {\r\n        postId: postId.toString(),\r\n        rating: rating\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} topicId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unmarkReplyAsAnswer(topicId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/UnmarkReplyAsAnswer/{topicId}/\", {\r\n        topicId: topicId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Activity Service\r\n\r\n  /**\r\n   * @param {String} tag - ie. #destiny, hash included\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followTag(tag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Tag/Follow/{?tag}\", {\r\n        tag: tag\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{id}/Follow/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {*} p1\r\n   * @param {*} p2\r\n   * @param {Number} [currentPage = 1]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApplicationActivityForUser(p1, p2, currentPage = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/Application/{p2}/{?page}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        page: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @deprecated 2016-09-10\r\n   */\r\n  getAggregatedActivitiesForCurrentUser(typeFilter, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Aggregation/{?typefilter,format}\", {\r\n        typefilter: typeFilter,\r\n        format: format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Following/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByCurrentUserV2(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Following/V2/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByUser(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Following/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByUserV2(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Following/V2/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFollowersOfTag(tag, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Tag/Followers/{?tag,itemsperpage,currentpage}\", {\r\n        tag: tag,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFollowersOfUser(membershipId, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{membershipId}/Followers/{?itemsperpage,currentpage}\", {\r\n        membershipId: membershipId,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumActivitiesForUser(p1, itemsPerPage, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/{?itemsperpage,currentpage,format}\", {\r\n        p1: p1,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage,\r\n        format: format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumActivitiesForUserV2(p1, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/ForumsV2/{?currentpage,format}\", {\r\n        p1: p1,\r\n        currentpage: currentPage,\r\n        format: format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFriends() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Friends/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFriendsAllNoPresence(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Friends/AllNoPresence/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFriendsPaged(membershipType, page) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Friends/{membershipType}/{page}/\", {\r\n        membershipType: membershipType,\r\n        page: page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedByCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Following/Groups/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedByUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{id}/Following/Groups/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedPagedByCurrentUser(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Following/Groups/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedPagedByUser(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Following/Groups/Paged/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLikeAndShareActivityForUser(p1, itemsPerPage, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/LikesAndShares/{?itemsperpage,currentpage,format}\", {\r\n        p1: p1,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage,\r\n        format: format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLikeAndShareActivityForUserV2(p1, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/LikesAndSharesV2/{?currentpage,format}\", {\r\n        p1: p1,\r\n        currentpage: currentPage,\r\n        format: format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLikeShareAndForumActivityForUser(p1, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/LikeShareAndForum/{?currentpage,format}\", {\r\n        p1: p1,\r\n        currentpage: currentPage,\r\n        format: format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUsersFollowedByCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Following/Users/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} tag - ie. #destiny, with hash\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowTag(tag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Tag/Unfollow/{?tag}\", {\r\n        tag: tag\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{id}/Unfollow/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Group Service\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveAllPending(groupId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/ApproveAll/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveGroupMembership(groupId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Approve/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveGroupMembershipV2(groupId, membershipId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/ApproveV2/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @param {BigNumber[]} membershipIds\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approvePendingForList(groupId, message, membershipIds) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/ApproveList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        membershipIds: membershipIds.map(bn => bn.toString()),\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} comment\r\n   * @param {BungieNet.enums.moderatorRequestedPunishment} - might not be right enum\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  banMember(groupId, membershipId, comment, length) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Ban/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        comment: comment,\r\n        length: length\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} allyGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  breakAlliance(groupId, allyGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Relationship/{allyGroupId}/BreakAlliance/\", {\r\n        groupId: groupId.toString(),\r\n        allyGroupId: allyGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  breakAlliances(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/BreakAlliances/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createGroup() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/Create/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} details\r\n   * @param {String} details.about\r\n   * @param {Boolean} details.allowChat\r\n   * @param {*[]} details.attributes\r\n   * @param {String} details.avatarImageIndex\r\n   * @param {*[]} details.clanMembershipTypes\r\n   * @param {Boolean} details.isDefaultPostPublic\r\n   * @param {Boolean} details.isPublic\r\n   * @param {Boolean} details.isPublicTopicAdminOnly\r\n   * @param {String} details.locale\r\n   * @param {BigNumber} details.membershipOption\r\n   * @param {String} details.motto\r\n   * @param {String} detail.name\r\n   * @param {String} detail.tags - \"#tag1,#tag2,#tag3\"\r\n   * @param {String} detail.theme\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createGroupV2(details) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/Create/V2/\"),\r\n      \"POST\",\r\n      details\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createMinimalGroup(name, about) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/Create/Minimal/\"),\r\n      \"POST\",\r\n      {\r\n        groupName: name,\r\n        groupAbout: about\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyAllPending(groupId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/DenyAll/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyGroupMembership(groupId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Deny/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyGroupMembershipV2(groupId, membershipId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/DenyV2/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @param {BigNumber[]} membershipIds\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyPendingForList(groupId, message, membershipIds) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/DenyList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message: message,\r\n        membershipIds: membershipIds.map(bn => bn.toString())\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType}\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  diableClanForGroup(groupId, clanMembershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clans/Disable/{clanMembershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType: clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  disbandAlliance(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/BreakAllAlliances/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Edit/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {BungieNet.enums.groupMemberType} groupMembershipType\r\n   * @param {*} [clanPlatformType = 0]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editGroupMembership(groupId, membershipId, groupMembershipType, clanPlatformType = 0) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/SetMembershipType/{groupMembershipType}/{?clanPlatformType}\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString(),\r\n        groupMembershipType: groupMembershipType,\r\n        clanPlatformType: clanPlatformType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Object} details\r\n   * @param {Boolean} details.allowChat\r\n   * @param {BungieNet.enums.chatSecuritySetting} details.chatSecurity\r\n   * @param {BungieNet.enums.groupPostPublicity} details.defaultPublicity\r\n   * @param {Boolean} details.enableInvitationMessagingForAdmins\r\n   * @param {BungieNet.enums.groupHomepage} details.homepage\r\n   * @param {Boolean} details.isPublic\r\n   * @param {Boolean} details.isPublicTopicAdminOnly\r\n   * @param {String} details.locale\r\n   * @param {BungieNet.enums.membershipOption} details.membershipOption\r\n   * @param {String} details.about\r\n   * @param {String} details.clanCallSign\r\n   * @param {String} details.motto\r\n   * @param {String} details.name\r\n   * @param {String} details.tags - \"#tag1,#tag2,#tag3\"\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editGroupV2(groupId, details) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/EditV2/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      details\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {String} clanName\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  enableClanForGroup(groupId, clanMembershipType, clanName) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clans/Enable/{clanMembershipType}/{?clanName}\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType: clanMembershipType,\r\n        clanName: clanName\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followGroupsWithGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/FollowList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} followGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followGroupWithGroup(groupId, followGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Follow/{followGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        followGroupId: followGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} itemsPerPage\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminsOfGroup(groupId, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Admins/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} itemsPerPage\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminsOfGroupV2(groupId, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/AdminsV2/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllFoundedGroupsForMember(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{id}/Founded/All/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllGroupsForCurrentMember(clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyGroups/All/{?clanonly,populatefriends}\", {\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllGroupsForMember(membershipId, clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/All/{?clanonly,populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        clanonly: clanOnly,\r\n        populateFriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAlliedGroups(groupId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/{?currentPage,populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage: currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableGroupAvatars() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/GetAvailableAvatars/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableGroupThemes() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/GetAvailableThemes/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBannedMembersOfGroup(groupId, currentPage, itemsPerPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Banned/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBannedMembersOfGroupV2(groupId, currentPage, itemsPerPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/BannedV2/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getClanAttributeDefinitions() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/GetClanAttributeDefinitions/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDeletedGroupsForCurrentMember() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/MyGroups/Deleted/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFoundedGroupsForMember(\r\n    membershipId,\r\n    currentPage,\r\n    clanOnly = false,\r\n    populateFriends = false\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/Founded/{currentPage}/{?clanonly,populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        currentPage: currentPage,\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroup(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} groupName\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupByName(groupName, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/Name/{groupName}/{?populatefriends}\", {\r\n        groupName: groupName,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedByGroup(groupId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Following/{currentPage}/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage: currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowingGroup(groupId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/FollowedBy/{currentPage}/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage: currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} partialTag\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupTagSuggestions(partialTag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/GetGroupTagSuggestions/{?partialtag}\", {\r\n        partialtag: partialTag\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForCurrentMember(clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyGroups/{?clanonly,populatefriends}\", {\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForCurrentMemberV2(currentPage, clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyGroups/V2/{currentPage}/{?clanonly,populatefriends}\", {\r\n        currentPage: currentPage,\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForMember(membershipId, clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/{?clanonly,populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForMemberV2(\r\n    membershipId,\r\n    currentPage,\r\n    clanOnly = false,\r\n    populateFriends = false\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/Joined/{currentPage}/{?clanonly,populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        currentPage: currentPage,\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForMemberV3(membershipId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/JoinedV3/{currentPage}/{?populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        currentPage: currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {BungieNet.enums.groupMemberType}\r\n   * @param {*} [sort = 0]\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfClan(groupId, currentPage, memberType, sort, platformType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/ClanMembers/{?currentPage,memberType,sort,platformType}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage: currentPage,\r\n        memberType: memberType,\r\n        sort: sort,\r\n        platformType: platformType\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @param {BungieNet.enums.groupMemberType} memberType\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @param {*} sort\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfGroup(groupId, currentPage, itemsPerPage, memberType, platformType, sort) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{?itemsPerPage,currentPage,memberType,platformType,sort}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage,\r\n        memberType: memberType,\r\n        platformType: platformType,\r\n        sort: sort\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @param {BungieNet.enums.groupMemberType} memberType\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @param {*} sort\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfGroupV2(groupId, currentPage, itemsPerPage, memberType, platformType, sort) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/MembersV2/{?itemsPerPage,currentPage,memberType,platformType,sort}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage,\r\n        memberType: memberType,\r\n        platformType: platformType,\r\n        sort: sort\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @param {BungieNet.enums.groupMemberType} memberType\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @param {*} sort\r\n   * @param {String} nameSearch\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfGroupV3(\r\n    groupId,\r\n    currentPage,\r\n    itemsPerPage,\r\n    memberType,\r\n    platformType,\r\n    sort,\r\n    nameSearch\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/MembersV3/{?itemsPerPage,currentPage,memberType,platformType,sort,nameSearch}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage: itemsPerPage,\r\n        currentPage: currentPage,\r\n        memberType: memberType,\r\n        platformType: platformType,\r\n        sort: sort,\r\n        nameSearch: nameSearch\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    groupdId: \"-BigNumber-\",\r\n   *    membershipType: 2,\r\n   *    membershipId: \"-BigNumber-\"\r\n   *  }\r\n   * ]\r\n   */\r\n  getMyClanMemberships() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/MyClans/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingClanMemberships(groupId, clanMembershipType, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clan/{clanMembershipType}/Pending/{currentPage}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType: clanMembershipType,\r\n        currentPage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForCurrentMember(populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyPendingGroups/{?populatefriends}\", {\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForCurrentMemberV2(currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyPendingGroupsV2/{currentPage}/{?populatefriends}\", {\r\n        currentPage: currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForMember(membershipId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/Pending/{?populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForMemberV2(currentPage, populateFriends) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyPendingGroups/V2/{currentPage}/{?populatefriends}\", {\r\n        currentPage: currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingMemberships(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/Pending/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingMembershipsV2(groupId, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/PendingV2/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage: currentPage,\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecommendedGroups(populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/Recommended/{?populatefriends}\", {\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} params\r\n   * @param {Object} params.contents\r\n   * @param {String} params.contents.searchValue\r\n   * @param {BungieNet.enums.groupTypeSearchFilter} params.contents.searchType\r\n   * @param {*} params.creationDate\r\n   * @param {Number} params.currentPage\r\n   * @param {BungieNet.enums.groupMemberCountFilter} params.groupMemberCountFilter\r\n   * @param {Number} params.itemsPerPage\r\n   * @param {String} params.localeFilter\r\n   * @param {BungieNet.enums.bungieMembershipType} params.membershipType\r\n   * @param {*} params.sortBy\r\n   * @param {String} params.tagText\r\n   * @param {Boolean} [populatefriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  groupSearch(params, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/Search/{?populatefriends}\", {\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      params\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {String} title\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteClanMember(groupId, membershipId, clanMembershipType, title, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/InviteToClan/{membershipId}/{clanMembershipType}/\", {\r\n        groupId: groupId,\r\n        membershipId: membershipId.toString(),\r\n        clanMembershipType: clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n        title: title,\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} title\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteGroupMember(groupId, membershipId, title, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Invite/{membershipId}/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        title: title,\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber[]} targetIds\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteManyToJoin(groupId, targetIds, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/InviteMany/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        targetIds: targetIds.map(bn => bn.toString()),\r\n        messageContent: {\r\n          message: message\r\n        }\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} allyGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteToJoinAlliance(groupId, allyGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/Invite/{allyGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        allyGroupId: allyGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  joinClanForGroup(groupId, clanMembershipType, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/{clanMembershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType: clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message: message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanPlatformType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  kickMember(groupId, membershipId, clanPlatformType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Kick/{?clanPlatformType}\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString(),\r\n        clanPlatformType: clanPlatformType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  leaveClanForGroup(groupId, clanMembershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clans/Leave/{clanMembershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType: clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  migrate(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{p1}/Migrate/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideFounderAdmin(groupId, membershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Admin/FounderOverride/{membershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        membershipType: membershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  refreshClanSettingsInDestiny(clanMembershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyClans/Refresh/{clanMembershipType}/\", {\r\n        clanMembershipType: clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  requestGroupMembership(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/Apply/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  requestGroupMembershipV2(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/ApplyV2/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} allyGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  requestToJoinAlliance(groupId, allyGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/RequestToJoin/{allyGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        allyGroupId: allyGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rescindGroupMembership(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/Rescind/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setGroupAsAlliance(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/SetAsAlliance/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {*} p2\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setPrivacy(groupId, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Privacy/{p2}/\", {\r\n        groupId: groupId.toString(),\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unbanMember(groupId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Unban/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  undeleteGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Undelete/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowAllGroupsWithGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/UnfollowAll/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowGroupsWithGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/UnfollowList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} followGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowGroupWithGroup(groupId, followGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Unfollow/{followGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        followGroupId: followGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Ignore Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  flagItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/Flag/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getIgnoresForUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/MyIgnores/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getIgnoreStatusForPost(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Ignore/MyIgnores/Posts/{postId}/\", {\r\n        postId: postId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getIgnoreStatusForUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Ignore/MyIgnores/Users/{membershipId}/\", {\r\n        membershipId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getReportContext(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Ignore/ReportContext/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  ignoreItem(\r\n    ignoredItemId,\r\n    ignoredItemType,\r\n    comment,\r\n    reason,\r\n    itemContextId,\r\n    itemContextType,\r\n    moderatorRequest\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/Ignore/\"),\r\n      \"POST\",\r\n      {\r\n        ignoredItemId: ignoredItemId,\r\n        ignoredItemType: ignoredItemType,\r\n        comment: comment,\r\n        reason: reason,\r\n        itemContextId: itemContextId,\r\n        itemContextType: itemContextType,\r\n        ModeratorRequest: moderatorRequest\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  myLastReport() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/MyLastReport/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unignoreItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/Unignore/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Game Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPlayerGamesById(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Game/GetPlayerGamesById/{p1}/\", {\r\n        p1: p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reachModelSneakerNet(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Game/ReachModelSneakerNet/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Admin Service\r\n\r\n  /**\r\n   * @param {String} username - search term\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  adminUserSearch(username) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/Search/{?username}\", {\r\n        username: username\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  bulkEditPost() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/BulkEditPost/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminHistory(p1, p2, membershipFilter, startDate, endDate) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/GlobalHistory/{p1}/{p2}/{?membershipFilter,startdate,enddate}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        membershipFilter: membershipFilter,\r\n        startdate: startDate,\r\n        enddate: endDate\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAssignedReports() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Assigned/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} [currentPage = 1]\r\n   * @param {Number} [itemsPerPage = 1]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDisciplinedReportsForMember(membershipId, currentPage = 1, itemsPerPage = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/Reports/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        currentPage: currentPage,\r\n        itemsPerPage: itemsPerPage\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {*} p2\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecentDisciplineAndFlagHistoryForMember(membershipId, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/RecentIncludingFlags/{p2}/\", {\r\n        id: membershipId.toString(),\r\n        p2: p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getResolvedReports() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Reports/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  membershipId: \"-id-\",\r\n   *  isProfileBanned: bool\r\n   *  isForumBanned: bool\r\n   *  isMsgBanned: bool,\r\n   *  isGroupWallBanned: bool\r\n   * }\r\n   */\r\n  getUserBanState(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/GetBanState/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage - 0-based\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUserPostHistory(membershipId, currentPage = 0) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/PostHistory/{page}/\", {\r\n        id: membershipId.toString(),\r\n        page: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUserWebHistoryClientIpHistory(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/GetWebClientIpHistory/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  globallyIgnoreItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Ignores/GloballyIgnore/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideBanOnUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/SetBan/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideGlobalIgnore() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Ignores/OverrideGlobalIgnore/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideGroupWallBanOnUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/SetGroupWallBan/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideMsgBanOnUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/SetMsgBan/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overturnReport() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Reports/Overturn/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} reportId\r\n   * @param {BigNumber} reason\r\n   * @param {BigNumber} banLength\r\n   * @param {Number} result\r\n   * @param {BigNumber} reportId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  resolveReport(reportId, reason, banLength, result, comments) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Assigned/Resolve/\"),\r\n      \"POST\",\r\n      {\r\n        banLength: banLength.toString(),\r\n        comments: comments,\r\n        reason: reason.toString(),\r\n        reportId: reportId.toString(),\r\n        result: result\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Token Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  applyOfferToCurrentDestinyMembership(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/ApplyOfferToCurrentDestinyMembership/{p1}/{p2}/\", {\r\n        p1: p1,\r\n        p2: p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  breakBond() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/BreakBond/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  claimAndApplyOnToken(tokenType, redeemCode) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/ClaimAndApplyToken/{tokenType}/\", {\r\n        tokenType: tokenType\r\n      }),\r\n      \"POST\",\r\n      {\r\n        redeemCode: redeemCode\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  claimToken(redeemCode) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/Claim/\"),\r\n      \"POST\",\r\n      {\r\n        redeemCode: redeemCode\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  consumeMarketplacePlatformCodeOffer(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/ConsumeMarketplacePlatformCodeOffer/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCurrentUserOfferHistory() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/OfferHistory/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  IsThrottled: false,\r\n   *  ThrottleExpires: \"-iso-date-string\",\r\n   *  NumberOfFailedAttemptsToday: 0,\r\n   *  MaximumFailedAttemptsPerDay: 3,\r\n   *  AgeVerificationState: true\r\n   * }\r\n   */\r\n  getCurrentUserThrottleState() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/ThrottleState/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRAFEligibility() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/GetEligibility/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  marketplacePlatformCodeOfferHistory() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/MarketplacePlatformCodeOfferHistory/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafClaim() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/Claim/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafGenerateReferralCode(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/RAF/GenerateReferralCode/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafGetNewPlayerBondDetails() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/GetNewPlayerBondDetails/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafGetVeteranBondDetails() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/GetVeteranBondDetails/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  verifyAge() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/VerifyAge/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Destiny Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  buyItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/BuyItem/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} itemId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  equipItem(membershipType, itemId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/EquipItem/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: membershipType,\r\n        itemId: itemId.toString(),\r\n        characterId: characterId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber[]} itemIds\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  equipItems(membershipType, characterId, itemIds) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/EquipItems/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString(),\r\n        itemIds: itemIds.map(bn => bn.toString())\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccount(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccountSummary(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Summary/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getActivityBlob(e) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/GetActivityBlob/{e}/\", {\r\n        e: e\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BungieNet.enums.destinyActivityModeType} [mode = BungieNet.enums.destinyActivityModeType.none]\r\n   * @param {Number} [count = 25] number of results to return\r\n   * @param {Number} [page = 1] 1-based\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getActivityHistory(\r\n    membershipType,\r\n    destinyMembershipId,\r\n    characterId,\r\n    mode = BungieNet.enums.destinyActivityModeType.none,\r\n    count = 25,\r\n    page = 1\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/ActivityHistory/{membershipType}/{destinyMembershipId}/{characterId}/{?mode,count,page}\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString(),\r\n        mode: mode,\r\n        count: count,\r\n        page: page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForAccount(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Advisors/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForCharacter(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Advisors/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForCharacterV2(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Advisors/V2/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForCurrentCharacter(membershipType, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Advisors/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllItemsSummary(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Items/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllVendorsForCurrentCharacter(membershipType, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendors/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType}\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBondAdvisors(membershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Advisors/Bonds/\", {\r\n        membershipType: membershipType\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacter(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Complete/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterActivities(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Activities/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterInventory(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterInventorySummary(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/Summary/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterProgression(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Progression/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterSummary(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getClanLeaderboards(p1, modes, statid, maxtop) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/ClanLeaderboards/{p1}/{?modes,statid,maxtop}\", {\r\n        p1: p1,\r\n        modes: modes,\r\n        statid: statid,\r\n        maxtop: maxtop\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyAggregateActivityStats(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/AggregateActivityStats/{membershipType}/{destinyMembershipId}/{characterId}/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyExplorerItems(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Explorer/Items/{?params*}\", {\r\n        params: params\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyExplorerTalentNodeSteps(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Explorer/TalentNodeSteps/{?params*}\", {\r\n        params: params\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyLiveTileContentItems() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/LiveTiles/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyManifest() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Manifest/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinySingleDefinition(definitionType, definitionId, version) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Manifest/{definitionType}/{definitionId}/{?version}\", {\r\n        definitionType: definitionType,\r\n        definitionId: definitionId,\r\n        version: version\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getExcellenceBadges(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/GetExcellenceBadges/{membershipType}/{destinyMembershipId}/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGrimoireByMembership(membershipType, destinyMembershipId, flavour, single) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vanguard/Grimoire/{membershipType}/{destinyMembershipId}/{?flavour,single}\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId,\r\n        flavour: flavour,\r\n        single: single\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGrimoireDefinition() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Vanguard/Grimoire/Definition/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} options\r\n   * @param {BungieNet.enums.bungieMembershipType} options.membershipType\r\n   * @param {BigNumber} options.destinyMembershipId\r\n   * @param {BigNumber} options.characterId\r\n   * @param {BungieNet.enums.periodType} options.periodType\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} options.modes\r\n   * @param {BungieNet.enums.destinyStatsGroupType[]} options.groups\r\n   * @param {String} options.monthStart\r\n   * @param {String} options.monthEnd\r\n   * @param {String} options.dayStart\r\n   * @param {String} options.dayEnd\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHistoricalStats(options) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/{mType}/{dMID}/{cId}/{?pType,mds,grps,mstart,mend,dstart,dend}\", {\r\n        mType: options.membershipType,\r\n        dMID: options.destinyMembershipId,\r\n        cId: options.characterId,\r\n        pType: options.periodType,\r\n        mds: options.modes.join(\",\"),\r\n        grps: options.groups.join(\",\"),\r\n        mstart: options.monthStart,\r\n        mend: options.monthEnd,\r\n        dstart: options.dayStart,\r\n        dend: options.dayEnd\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHistoricalStatsDefinition() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Stats/Definition/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BungieNet.enums.destinyStatsGroupType[]} groups\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHistoricalStatsForAccount(membershipType, destinyMembershipId, groups) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/Account/{membershipType}/{destinyMembershipId}/{?groups}\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        groups: groups\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} itemInstanceId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getItemDetail(membershipType, destinyMembershipId, characterId, itemInstanceId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/{itemInstanceId}/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString(),\r\n        itemInstanceId: itemInstanceId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getItemReferenceDetail(p1, p2, p3, p4) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{p1}/Account/{p2}/Character/{p3}/ItemReference/{p4}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3,\r\n        p4: p4\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} modes\r\n   * @param {*} statid\r\n   * @param {*} maxtop\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLeaderboards(membershipType, destinyMembershipId, modes, statid, maxtop) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/Leaderboards/{membershipType}/{destinyMembershipId}/{?modes,statid,maxtop}\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        modes: modes.join(\",\"),\r\n        statid: statid,\r\n        maxtop: maxtop\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} modes\r\n   * @param {*} statid\r\n   * @param {*} maxtop\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLeaderboardsForCharacter(membershipType, destinyMembershipId, characterId, modes, statid, maxtop) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/Leaderboards/{membershipType}/{destinyMembershipId}/{characterId}/{?modes,statid,maxtop}\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString(),\r\n        modes: modes.join(\",\"),\r\n        statid: statid,\r\n        maxtop: maxtop\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} modes\r\n   * @param {*} code\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLeaderboardsForPsn(modes, code) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/LeaderboardsForPsn/{?modes,code}\", {\r\n        modes: modes.join(\",\"),\r\n        code: code\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.eums.membershipType} membershipType\r\n   * @param {String} displayName\r\n   * @param {Boolean} [ignoreCase = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembershipIdByDisplayName(membershipType, displayName, ignoreCase) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Stats/GetMembershipIdByDisplayName/{displayName}/{?ignorecase}\", {\r\n        membershipType: membershipType,\r\n        displayName: displayName,\r\n        ignorecase: ignoreCase\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @param {Boolean} flavour\r\n   * @param {BigNumber} single\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMyGrimoire(membershipType, flavour, single) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vanguard/Grimoire/{membershipType}/{?flavour,single}\", {\r\n        membershipType: membershipType,\r\n        flavour: flavour,\r\n        single: single\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} activityInstanceId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostGameCarnageReport(activityInstanceId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/PostGameCarnageReport/{activityInstanceId}/\", {\r\n        activityInstanceId: activityInstanceId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicAdvisors() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Advisors/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicAdvisorsV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Advisors/V2/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicVendor(vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vendors/{vendorId}/\", {\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicVendorWithMetadata(vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vendors/{vendorId}/Metadata/\", {\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicXurVendor() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Advisors/Xur/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @param {BigNumber} recordBookHash\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecordBookCompletionStatus(membershipType, recordBookHash) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/RecordBooks/{recordBookHash}/Completition/\", {\r\n        membershipType: membershipType,\r\n        recordBookHash: recordBookHash.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getSpecialEventAdvisors() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Events/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTriumphs(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Triumphs/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUniqueWeaponHistory(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/UniqueWeapons/{membershipType}/{destinyMembershipId}/{characterId}/\", {\r\n        membershipType: membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVault(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Vault/{?accountId}\", {\r\n        membershipType: membershipType,\r\n        accountId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVaultSummary(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Vault/Summary/{?accountId}\", {\r\n        membershipType: membershipType,\r\n        accountId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorForCurrentCharacter(membershipType, characterId, vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString(),\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorForCurrentCharacterWithMetadata(membershipType, characterId, vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/Metadata/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString(),\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @param {BigNumber} itemId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorItemDetailForCurrentUser(membershipType, characterId, vendorId, itemId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/Item/{itemId}/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString(),\r\n        vendorId: vendorId.toString(),\r\n        itemId: itemId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @param {BigNumber} itemId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorItemDetailForCurrentUserWithMetadata(membershipType, characterId, vendorId, itemId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/Item/{itemId}/Metadata/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString(),\r\n        vendorId: vendorId.toString(),\r\n        itemId: itemId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorSummariesForCurrentCharacter(membershipType, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendors/Summaries/\", {\r\n        membershipType: membershipType,\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  refundItem(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{p1}/RefundItem/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {String} displayName\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchDestinyPlayer(membershipType, displayName) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/SearchDestinyPlayer/{membershipType}/{displayName}/\", {\r\n        membershipType: membershipType,\r\n        displayName: displayName\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} itemId\r\n   * @param {BigNumber} characterId\r\n   * @param {Boolean} state - true to lock, false to unlock\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setItemLockState(membershipType, itemId, characterId, state) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/SetLockState/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: membershipType,\r\n        itemId: itemId.toString(),\r\n        characterId: characterId.toString(),\r\n        state: state\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} membershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} itemId\r\n   * @param {Boolean} state - true to track, false to not track\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setQuestTrackedState(membershipType, membershipId, characterId, itemId, state) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/SetQuestTrackedState/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: membershipType,\r\n        membershipId: membershipId.toString(),\r\n        characterId: characterId.toString(),\r\n        itemId: itemId.toString(),\r\n        state: state\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {Number} itemReferenceHash\r\n   * @param {BigNumber} itemId\r\n   * @param {Number} stackSize\r\n   * @param {BigNumber} characterId\r\n   * @param {Boolean} transferToVault\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  transferItem(\r\n    membershipType,\r\n    itemReferenceHash,\r\n    itemId,\r\n    stackSize,\r\n    characterId,\r\n    transferToVault\r\n  ) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/TransferItem/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: membershipType.toString(),\r\n        itemReferenceHash: itemReferenceHash,\r\n        itemId: itemId.toString(),\r\n        stackSize: stackSize,\r\n        characterId: characterId.toString(),\r\n        transferToVault: transferToVault\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Community Content Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  adminSetCommunityLiveMemberBanStatus(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Partnerships/{p1}/{p2}/Ban/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  adminSetCommunityLiveMemberFeatureStatus(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Partnerships/{p1}/{p2}/Feature/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  alterApprovalState(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/AlterApprovalState/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editContent(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Edit/{p1}/\", {\r\n        p1: p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminCommunityLiveStatuses(p1, p2, name) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Admin/{p1}/{p2}/{?name}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        name: name\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApprovalQueue(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Queue/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityContent(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Get/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityFeaturedActivityModes() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/CommunityContent/Live/ActivityModes/Featured/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityLiveStatuses(p1, p2, p3, modeHash) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/All/{p1}/{p2}/{p3}/{?modeHash}\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3,\r\n        modeHash: modeHash\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityLiveStatusesForClanmates(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Clan/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityLiveStatusesForFriends(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Friends/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFeaturedCommunityLiveStatuses(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Features/{p1}/{p2}/{p3}/\", {\r\n        p1: p1,\r\n        p2: p2,\r\n        p3: p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.partnershipType} partnershipType\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getStreamingStatusForMember(partnershipType, membershipType, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Users/{pType}/{mType}/{mId}/\", {\r\n        pType: partnershipType,\r\n        mType: membershipType,\r\n        mId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  submitContent() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/CommunityContent/Submit/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Core Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableLocales() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(\"//GetAvailableLocales\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommonSettings() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(\"//Settings/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} includeStreaming\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGlobalAlerts(includeStreaming = true) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(URITemplate.expand(\"//GlobalAlerts/{?includestreaming}\", {\r\n        includestreaming: includeStreaming\r\n      }))\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getSystemStatus(p1) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(URITemplate.expand(\"//Status/{p1}/\", {\r\n        p1: p1\r\n      }))\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: \"Hello World\"\r\n   */\r\n  helloWorld() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(\"//HelloWorld/\")\r\n    ));\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Header key-name pairs\r\n * @type {Object}\r\n */\r\nPlatform.headers = {\r\n  apiKey: \"X-API-Key\",\r\n  contentType: \"Content-Type\"\r\n};\r\n\r\n/**\r\n * API content type\r\n * @type {String}\r\n */\r\nPlatform.contentType = \"application/json\";\r\n\r\n/**\r\n * Platform event key-name pairs\r\n * @type {Object}\r\n */\r\nPlatform.events = {\r\n\r\n  activeFrame: \"platformActiveRequest\",\r\n  queuedFrame: \"queuedFrame\",\r\n\r\n  frameBeforeSend: \"frameBeforeSend\",\r\n\r\n  frameHttpError: \"frameHttpError\",\r\n  frameHttpSuccess: \"frameHttpSuccess\",\r\n  frameHttpDone: \"frameHttpDone\",\r\n\r\n  frameError: \"frameError\",\r\n  frameSuccess: \"frameSuccess\",\r\n  frameDone: \"frameDone\"\r\n\r\n};\r\n\r\n/**\r\n * Default platform options\r\n * @type {Object}\r\n */\r\nPlatform.defaultOptions = {\r\n  apiKey: \"\",\r\n  maxConcurrent: -1,\r\n  timeout: 5000\r\n};\r\n"]}