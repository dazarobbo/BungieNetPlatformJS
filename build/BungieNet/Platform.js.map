{"version":3,"sources":["../../src/BungieNet/Platform.js"],"names":["Platform","_options","defaultOptions","_frames","_frameManager","_plugins","Set","_internalCookieJar","jar","opts","_init","Object","keys","filter","x","forEach","frame","platformRequest","once","events","beforeSend","options","timeout","forever","gzip","headers","contentType","apiKey","listeners","_frameBeforeSend","httpSuccess","_frameHttpSuccess","httpError","_frameHttpError","httpDone","_frameHttpDone","responseParsed","_frameResponseParsed","error","_frameError","success","_frameSuccess","done","_frameDone","eventName","handler","on","call","p","entries","_queueFrame","_tryFrame","req","Promise","resolve","reject","logger","log","endpoint","uri","toString","frameId","id","platform","request","serviceResolve","serviceReject","platformPath","segment","path","setSearch","search","endsWith","_prepareRequest","state","waiting","addFrame","maxConcurrent","getActive","size","getFrame","_activeFrame","args","update","e","_notifyPlugins","frameBeforeSend","frameHttpError","frameHttpSuccess","target","frameHttpDone","frameResponseParsed","frameError","frameSuccess","response","frameDone","removeFrame","add","delete","ownerMembershipId","currentPage","_serviceRequest","keyId","expand","appId","details","p1","p2","membershipId","membershipType","excludeBungieNet","username","q","page","searchTerm","p3","ackId","membersTo","body","membersToId","map","bn","conversationId","params","after","before","groupId","messageId","invitationId","invitationResponseState","subject","careerId","head","itemsperpage","itemsPerPage","currentpage","query","searchtext","ctype","cType","tag","searchText","types","post","postId","category","disableBits","isGroupPostPrivate","metata","metadata","tagCategory","tagInput","urlLinkOrImage","p4","partialTag","partialtag","quantity","tagsSinceDate","childPostId","showBanned","showbanned","parentPostId","pageSize","replySize","getParentPost","rootThreadMode","sortMode","contentId","group","sort","quickDate","categoryFilter","tagstring","tagString","answerPostId","questionTopicId","answer","question","comments","moderatedItemId","moderatedItemType","reason","requestedPunishment","pollId","optionIndex","rating","topicId","typeFilter","format","typefilter","message","membershipIds","comment","length","allyGroupId","name","about","groupName","groupAbout","clanMembershipType","groupMembershipType","clanPlatformType","clanName","followGroupId","clanOnly","populateFriends","clanonly","populatefriends","memberType","platformType","nameSearch","title","targetIds","messageContent","ignoredItemId","ignoredItemType","itemContextId","itemContextType","ModeratorRequest","moderatorRequest","membershipFilter","startdate","startDate","enddate","endDate","banLength","reportId","result","tokenType","redeemCode","itemId","characterId","itemIds","destinyMembershipId","mode","count","modes","statid","maxtop","definitionType","definitionId","version","flavour","single","mType","dMID","cId","pType","periodType","mds","join","grps","groups","mstart","monthStart","mend","monthEnd","dstart","dayStart","dend","dayEnd","itemInstanceId","code","displayName","ignoreCase","ignorecase","activityInstanceId","vendorId","recordBookHash","accountId","itemReferenceHash","stackSize","transferToVault","modeHash","partnershipType","mId","includeStreaming","includestreaming","cookieJar","ok","mc","getWaiting","active","execute","activeFrame","queuedFrame"],"mappings":"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","file":"Platform.js","sourcesContent":["/*eslint valid-jsdoc: off, require-jsdoc: off*/\r\n\r\nimport BungieNet from \"./BungieNet.js\";\r\nimport Frame from \"./Frame.js\";\r\nimport FrameSet from \"./FrameSet.js\";\r\nimport FrameManager from \"./FrameManager\";\r\nimport PlatformRequest from \"./PlatformRequest\";\r\nimport request from \"request\";\r\nimport Request from \"./Request.js\";\r\nimport URI from \"urijs\";\r\nimport URITemplate from \"urijs/src/URITemplate\";\r\n\r\n/**\r\n * Platform\r\n *\r\n * Notes:\r\n *\r\n * ===== Plugins =====\r\n * Plugins extend and dictate the operation of the platform. A platform instance\r\n * can have 0 or more plugins.\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * @example\r\n * let p = new Platform({\r\n *  apiKey: \"api-key-here\"\r\n * });\r\n *\r\n * p.timeout = 10000; //10 seconds\r\n *\r\n * p.getPublicAdvisorsV2().then(r => {\r\n * \t//Platform.Response\r\n * }, frame => {\r\n * \t//Platform.Frame\r\n * });\r\n *\r\n */\r\nexport default class Platform {\r\n\r\n  /**\r\n   * Initialise objects\r\n   * @return {undefined}\r\n   */\r\n  _init() {\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this._options = Platform.defaultOptions;\r\n\r\n    /**\r\n     * @type {Platform.FrameSet}\r\n     */\r\n    this._frames = new FrameSet();\r\n\r\n    /**\r\n     * @type {Platform.FrameManager}\r\n     */\r\n    this._frameManager = new FrameManager(this._frames);\r\n\r\n    /**\r\n     * @type {Set<Platform.Plugin>}\r\n     */\r\n    this._plugins = new Set();\r\n\r\n    /**\r\n     * Instance-specific cookie store\r\n     * @type {Object}\r\n     */\r\n    this._internalCookieJar = request.jar();\r\n\r\n  }\r\n\r\n  /**\r\n  * @param {Object} opts = {}\r\n  * @param {String} [opts.apiKey = \"\"] bungie.net API key\r\n  * @param {Number} [opts.maxConcurrent = -1] - maximum concurrent requests, default is no limit\r\n  * @param {Number} [opts.timeout = 5000] - network timeout in milliseconds\r\n   */\r\n  constructor(opts = {}) {\r\n\r\n    this._init();\r\n\r\n    //copy any value in opts to this._options\r\n    //only copy matching keys\r\n    //DON'T use hasOwnProperty - opts could be any object and that's OK\r\n    //\r\n    //NOTE: Object.assign is shallow; defaults are primitives anyway so it's OK\r\n    Object.keys(this._options)\r\n      .filter(x => x in opts)\r\n      .forEach(x => {\r\n        this._options[x] = opts[x];\r\n      });\r\n\r\n  }\r\n\r\n  /**\r\n   * Prepares the request and queues it\r\n   * @param {Platform.Frame} frame - frame to prepare\r\n   * @return {undefined}\r\n   */\r\n  _prepareRequest(frame) {\r\n\r\n    frame.platformRequest = new PlatformRequest(frame);\r\n\r\n    //set up a beforeSend handler to add other details\r\n    frame.platformRequest.once(PlatformRequest.events.beforeSend, () => {\r\n\r\n      const opts = frame.platformRequest.options;\r\n\r\n      opts.timeout = this._options.timeout;\r\n      opts.forever = true;\r\n      opts.gzip = true;\r\n      opts.headers[Platform.headers.contentType] = Platform.contentType;\r\n      opts.headers[Platform.headers.apiKey] = this._options.apiKey;\r\n\r\n    });\r\n\r\n    //listen for frame info\r\n    const listeners = {\r\n      [PlatformRequest.events.beforeSend]: this._frameBeforeSend,\r\n      [PlatformRequest.events.httpSuccess]: this._frameHttpSuccess,\r\n      [PlatformRequest.events.httpError]: this._frameHttpError,\r\n      [PlatformRequest.events.httpDone]: this._frameHttpDone,\r\n      [PlatformRequest.events.responseParsed]: this._frameResponseParsed,\r\n      [PlatformRequest.events.error]: this._frameError,\r\n      [PlatformRequest.events.success]: this._frameSuccess,\r\n      [PlatformRequest.events.done]: this._frameDone\r\n    };\r\n\r\n    for(const [eventName, handler] of Object.entries(listeners)) {\r\n      frame.platformRequest.on(eventName, p => handler.call(this, p));\r\n    }\r\n\r\n    //queue it, then try the queue\r\n    this._queueFrame(frame);\r\n    this._tryFrame();\r\n\r\n  }\r\n\r\n  /**\r\n   * API-level request method\r\n   * @param  {Platform.Request} req\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  _serviceRequest(req) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const frame = new Frame();\r\n\r\n      BungieNet.logger.log(\"info\", \"Received service request\", {\r\n        endpoint: req.uri.toString(),\r\n        frameId: frame.id\r\n      });\r\n\r\n      frame.platform = this;\r\n      frame.request = req;\r\n      frame.serviceResolve = resolve;\r\n      frame.serviceReject = reject;\r\n\r\n      //construct the full path\r\n      //copy any query string params\r\n      //add the locale\r\n      frame.request.uri =\r\n        BungieNet.platformPath\r\n        .segment(req.uri.path())\r\n        .setSearch(req.uri.search(true));\r\n\r\n      //urijs is smart enough to remove the trailing forwards-slash\r\n      //so add it back in manually\r\n      if(!frame.request.uri.path().endsWith(\"/\")) {\r\n        frame.request.uri.path(`${ frame.request.uri.path() }/`);\r\n      }\r\n\r\n      this._prepareRequest(frame);\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Frame} frame - frame to set as active\r\n   */\r\n  static _activeFrame(frame) {\r\n\r\n    BungieNet.logger.log(\"verbose\", \"Frame is active\", {\r\n      frameId: frame.id\r\n    });\r\n\r\n    frame.state = Frame.state.active;\r\n    frame.platformRequest.execute();\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {Frame} frame - frame to queue\r\n   */\r\n  _queueFrame(frame) {\r\n\r\n    BungieNet.logger.log(\"verbose\", \"Frame queued\", {\r\n      frameId: frame.id\r\n    });\r\n\r\n    frame.state = Frame.state.waiting;\r\n    this._frameManager.addFrame(frame);\r\n\r\n  }\r\n\r\n  /**\r\n   * Attempts to begin a request, taking any conditiions into account\r\n   * @return {Promise}\r\n   */\r\n  _tryFrame() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      BungieNet.logger.log(\"verbose\", \"Trying for a frame...\");\r\n\r\n      //check if too many ongoing requests\r\n      if(this._options.maxConcurrent >= 0) {\r\n        if(this._frameManager.getActive().size >= this._options.maxConcurrent) {\r\n          BungieNet.logger.log(\"warn\", \"Cannot get a frame - too many active requests\");\r\n          return reject();\r\n        }\r\n      }\r\n\r\n      const frame = this._frameManager.getFrame();\r\n\r\n      if(frame === null) {\r\n        return reject();\r\n      }\r\n\r\n      return Promise.resolve(Platform._activeFrame(frame));\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates plugins with the given event name and any data\r\n   * @param {String} eventName\r\n   * @param {*[]} args - array of arguments to be passed to plugin function\r\n   * @return {Promise}\r\n   */\r\n  _notifyPlugins(eventName, ...args) {\r\n    for(const p of this._plugins) {\r\n      p.update(eventName, ...args);\r\n    }\r\n  }\r\n\r\n\r\n  _frameBeforeSend(e) {\r\n    this._notifyPlugins(Platform.events.frameBeforeSend, e);\r\n  }\r\n\r\n  _frameHttpError(e) {\r\n    this._notifyPlugins(Platform.events.frameHttpError, e);\r\n  }\r\n\r\n  _frameHttpSuccess(e) {\r\n    this._notifyPlugins(Platform.events.frameHttpSuccess, e);\r\n  }\r\n\r\n  _frameHttpDone(e) {\r\n    e.target.frame.state = Frame.state.done;\r\n    this._notifyPlugins(Platform.events.frameHttpDone, e);\r\n  }\r\n\r\n  _frameResponseParsed(e) {\r\n    this._notifyPlugins(Platform.events.frameResponseParsed, e);\r\n  }\r\n\r\n  _frameError(e) {\r\n    this._notifyPlugins(Platform.events.frameError, e);\r\n    e.target.frame.serviceReject();\r\n    this._frameDone(e);\r\n  }\r\n\r\n  _frameSuccess(e) {\r\n    this._notifyPlugins(Platform.events.frameSuccess, e);\r\n    e.target.frame.serviceResolve(e.target.frame.response);\r\n    this._frameDone(e);\r\n  }\r\n\r\n  _frameDone(e) {\r\n    this._notifyPlugins(Platform.events.frameDone, e);\r\n    this._frameManager.removeFrame(e.target.frame);\r\n  }\r\n\r\n\r\n  /// Platform Options\r\n\r\n  /**\r\n   * Number of active requests\r\n   * @return {Number}\r\n   */\r\n  get activeRequestCount() {\r\n    return this._frameManager.getActive().size;\r\n  }\r\n\r\n  addPlugin(p) {\r\n    this._plugins.add(p);\r\n  }\r\n\r\n  removePlugin(p) {\r\n    this._plugins.delete(p);\r\n  }\r\n\r\n  get cookieJar() {\r\n    return this._options.cookieJar;\r\n  }\r\n\r\n  set cookieJar(ok) {\r\n    this._options.cookieJar = ok;\r\n  }\r\n\r\n  get internalCookieJar() {\r\n    return this._internalCookieJar;\r\n  }\r\n\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  get maxConcurrent() {\r\n    return this._options.maxConcurrent;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} mc\r\n   * @type {Number}\r\n   */\r\n  set maxConcurrent(mc) {\r\n    this._options.maxConcurrent = mc;\r\n    this._tryFrame();\r\n  }\r\n\r\n  /**\r\n   * Number of queued requests\r\n   * @return {Number}\r\n   */\r\n  get queuedCount() {\r\n    return this._frameManager.getWaiting().size;\r\n  }\r\n\r\n  /**\r\n   * Timeout for requests to the platform in milliseconds\r\n   * @return {[type]} [description]\r\n   */\r\n  get timeout() {\r\n    return this._options.timeout;\r\n  }\r\n\r\n  /**\r\n   * @param  {Number} timeout\r\n   */\r\n  set timeout(timeout) {\r\n    this._options.timeout = timeout;\r\n  }\r\n\r\n\r\n\r\n  /// Application Service\r\n\r\n  /**\r\n   * @param {Number} ownerMembershipId - member id to search apps for\r\n   * @param {Number} currentPage - result page\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  applicationSearch(ownerMembershipId, currentPage = 0) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/Search/\"),\r\n      \"POST\",\r\n      {\r\n        ownerMembershipId,\r\n        currentPage\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  changeApiKeyStatus(keyId, state) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/ChangeApiKeyState/{keyId}/{state}/\", {\r\n        keyId,\r\n        state\r\n      }),\r\n      \"POST\",\r\n      null\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Response: {\r\n   *  apiKey: \"-new-api-key\",\r\n   *  apiKeyId: 783639,\r\n   *  authorizationUrl: \"https://www.bungie.net/en/Application/Authorize/783639\",\r\n   *  creationDate: \"2016-12-19T11:05:41.603Z\",\r\n   *  status: 1\r\n   * }\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createApiKey(appId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/CreateApiKey/{appId}/\", {\r\n        appId\r\n      }),\r\n      \"POST\",\r\n      null\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} details\r\n   * @param {Boolean} details.agreedToCurrentEula - true to agree\r\n   * @param {String} details.link - website link for appId\r\n   * @param {String} details.name - name of app\r\n   * @param {String} details.origin - origin header\r\n   * @param {String} details.redirectUrl - oauth redirect url\r\n   * @param {BigNumber} details.scope - scope of app access\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createApplication(details) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/CreateApplication/\"),\r\n      \"POST\",\r\n      details\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} details\r\n   * @param {String} details.link - website link for app\r\n   * @param {String} details.name - name of app\r\n   * @param {String} details.origin - origin header\r\n   * @param {String} details.redirectUrl - oauth redirect url\r\n   * @param {BigNumber} details.scope - scope of app access\r\n   * @param {BigNumber} details.status - app status\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editApplication(appId, details) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/EditApplication/{appId}/\", {\r\n        appId\r\n      }),\r\n      \"POST\",\r\n      details\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccessTokensFromCode() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/GetAccessTokensFromCode/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccessTokensFromRefreshToken() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/GetAccessTokensFromRefreshToken/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} appId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApplication(appId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/Application/{appId}/\", {\r\n        appId\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApplicationApiKeys(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/ApplicationApiKeys/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAuthorizationForUserAndApplication(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/Authorization/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAuthorizations(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/Authorizations/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  privateApplicationSearch() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/App/PrivateSearch/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  revokeAuthorization(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/App/RevokeAuthorization/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// User Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/CreateUser/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editSuccessMessageFlags(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/MessageFlags/Success/Update/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableAvatars() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetAvailableAvatars/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableAvatarsAdmin(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetAvailableAvatarsAdmin/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableThemes() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetAvailableThemes/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {BigNumber} membershipId\r\n   * @param  {BungieNet.enums.bungieMembershipType} membershipType\r\n   */\r\n  getBungieAccount(membershipId, membershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetBungieAccount/{membershipId}/{membershipType}/\", {\r\n        membershipId: membershipId.toString(),\r\n        membershipType\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId - bungie.net memberId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBungieNetUserById(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetBungieNetUserById/{membershipId}/\", {\r\n        membershipId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCountsForCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetCounts/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    credentialType: 2,\r\n   *    credentialDisplayName: \"Psnid\",\r\n   *    isPublic: false\r\n   *  },\r\n   *  {\r\n   *    ...\r\n   *  }\r\n   * ]\r\n   */\r\n  getCredentialTypesForAccount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetCredentialTypesForAccount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  destinyAccounts: [],\r\n   *  bungieNetUser: {},\r\n   *  clans: [],\r\n   *  relatedGroups: {},\r\n   *  destinyAccountErrors: []\r\n   * }\r\n   */\r\n  getCurrentBungieAccount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetCurrentBungieAccount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetBungieNetUser/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    AppInstallationId: \"-guid-\",\r\n   *    AppType: \"BnetMobile\",\r\n   *    DeviceName: \"Nexus\",\r\n   *    DeviceType: 3,\r\n   *    MembershipId: \"-bungie.net membership id-\",\r\n   *    MembershipType: \"-bnext enum-\",\r\n   *    PairId: \"-BigNumber-\",\r\n   *    PairingDate: \"iso date string\"\r\n   *  }\r\n   * ]\r\n   */\r\n  getMobileAppPairings() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetMobileAppPairings/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example {@see getMobileAppPairings}\r\n   */\r\n  getMobileAppPairingsUncached() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetMobileAppPairingsUncached/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    notificationSettingId: \"-BigNumber-\",\r\n   *    membershipId: \"-BigNumber-\",\r\n   *    optInFlags: \"\",\r\n   *    scheduleFlags: 0,\r\n   *    notificationMethod: \"-BigNumber-\",\r\n   *    notificationType: \"-BigNumber-\",\r\n   *    displayName: \"New Messages\",\r\n   *    settingDescription: \"Tell me if I have a new Bungie.net Private Message\",\r\n   *    possibleMethods: 7\r\n   *  },\r\n   *  ...\r\n   * ]\r\n   */\r\n  getNotificationSettings() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetNotificationSettings/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPartnerships(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/{p1}/Partnerships/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    apiKey: \"hex\",\r\n   *    ownerMembershipId: \"0\",\r\n   *    creationDate: \"iso date string\",\r\n   *    expirationDate: \"iso date string\",\r\n   *    apiEulaVersion: 1\r\n   *  }\r\n   * ]\r\n   */\r\n  getPlatformApiKeysForUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetPlatformApiKeysForUser/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: \"/ExpireWebAuth.ashx?...\"\r\n   */\r\n  getSignOutUrl() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/GetSignOutUrl/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId - bungie.net membership id\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: []\r\n   */\r\n  getUserAliases(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetUserAliases/{membershipId}/\", {\r\n        membershipId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [excludeBungieNet = false] - exclude bungie.net member id\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  -id-as-key-: -membership-type-as-value-,\r\n   *  ...\r\n   * }\r\n   */\r\n  getUserMembershipIds(excludeBungieNet = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/GetMembershipIds/{?excludebungienet}\", {\r\n        excludeBungieNet\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  linkOverride() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/LinkOverride/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  registerMobileAppPair() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/RegisterMobileAppPair/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {*} p1\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  removePartnership(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/Partnerships/{p1}/Remove/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} username - query to search for\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  { user information },\r\n   *  ...\r\n   * ]\r\n   */\r\n  searchUsers(username) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/SearchUsers/{?q}\", {\r\n        q: username\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} username - search query\r\n   * @param {Number} [page = 1] - 1-based page number\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example {@see searchUsers}\r\n   */\r\n  searchUsersPaged(username, page = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/SearchUsersPaged/{searchTerm}/{page}/\", {\r\n        searchTerm: username,\r\n        page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} username - search query\r\n   * @param {Number} [page = 1] 1-based page number\r\n   * @param {*} [p3 = null] UNKNOWN\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example {@see SearchUsersPaged}\r\n   */\r\n  searchUsersPagedV2(username, page = 1, p3 = null) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/SearchUsersPaged/{searchTerm}/{page}/{p3}/\", {\r\n        searchTerm: username,\r\n        page,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setAcknowledged(ackId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/Acknowledged/{ackId}/\", {\r\n        ackId\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unregisterMobileAppPair(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/UnregisterMobileAppPair/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateDestinyEmblemAvatar() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/UpdateDestinyEmblemAvatar/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateNotificationSetting() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/Notification/Update/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateStateInfoForMobileAppPair() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/UpdateStateInfoForMobileAppPair/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Updates the user with the given options\r\n   * @link https://destinydevs.github.io/BungieNetPlatform/docs/UserService/UpdateUser#/JSON-POST-Parameters\r\n   * @param  {Object} opts\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateUser(opts) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/User/UpdateUser/\"),\r\n      \"POST\",\r\n      opts\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateUserAdmin(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/User/UpdateUserAdmin/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Message Service\r\n\r\n  /**\r\n   * @param {BigNumber[]} membersTo - array of memberIDs\r\n   * @param {String} body - body of the message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createConversation(membersTo, body) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/CreateConversation/\"),\r\n      \"POST\",\r\n      {\r\n        membersToId: membersTo.map(bn => bn.toString()),\r\n        body\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createConversationV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/CreateConversationV2/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllianceInvitedToJoinInvitations(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/AllianceInvitations/InvitationsToJoinAnotherGroup/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllianceJoinInvitations(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/AllianceInvitations/RequestsToJoinYourGroup/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationById(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationById/{conversationId}/\", {\r\n        conversationId: conversationId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {BigNumber} conversationId - conversation id\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationByIdV2(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationByIdV2/{id}/\", {\r\n        id: conversationId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV2(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV2/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV3(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV3/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV4(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV4/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {Number} [page = 1]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationsV5(page = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationsV5/{page}/\", {\r\n        page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationThreadV2(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationThreadV2/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Get a page of a conversation\r\n   * params.before can be set using BigNumber like so:\r\n   * (new BigNumber(2)).pow(63).minus(1)\r\n   * @param {Object} params\r\n   * @param {BigNumber} params.id - conversation id\r\n   * @param {Number} params.page - page to return\r\n   * @param {BigNumber} params.before - message id filter\r\n   * @param {BigNumber} params.after - message id filter\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationThreadV3(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\r\n        \"/Message/GetConversationThreadV3/{id}/{page}/{?after,before}\", {\r\n          id: params.id.toString(),\r\n          page: params.page,\r\n          after: params.after.toString(),\r\n          before: params.before.toString()\r\n        })\r\n      ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationWithMemberId(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationWithMember/{id}/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getConversationWithMemberIdV2(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetConversationWithMemberV2/{id}/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param  {Number} [page = 1] - 1-based\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupConversations(page = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/GetGroupConversations/{page}/\", {\r\n        page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getInvitationDetails(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/{p1}/Details/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTotalConversationCount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetTotalConversationCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadConversationCountV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetUnreadPrivateConversationCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadConversationCountV3() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetTotalConversationCountV3/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadConversationCountV4() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetUnreadConversationCountV4/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUnreadGroupConversationCount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/GetUnreadGroupConversationCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Leave a given conversation by id\r\n   * @param  {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  leaveConversation(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/LeaveConversation/{id}/\", {\r\n        id: conversationId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} messageId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderateGroupWall(groupId, messageId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/ModerateGroupWall/{groupId}/{messageId}/\"),\r\n      \"POST\",\r\n      {\r\n        groupId: groupId.toString(),\r\n        messageId: messageId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewAllInvitations(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/ReviewAllDirect/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewInvitation(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewInvitationDirect(invitationId, invitationResponseState) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/ReviewDirect/{id}/{state}/\", {\r\n        id: invitationId,\r\n        state: invitationResponseState\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reviewInvitations(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Message/Invitations/ReviewListDirect/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  saveMessageV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/SaveMessageV2/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Add a message to a conversation\r\n   * @param  {String} body\r\n   * @param  {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  saveMessageV3(body, conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/SaveMessageV3/\"),\r\n      \"POST\",\r\n      {\r\n        body,\r\n        conversationId: conversationId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Currently used by bungie.net to save a message to a group wall\r\n   * @param {String} body\r\n   * @param {BigNumber} conversationId\r\n   * @param {String} [subject = \"\"]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  saveMessageV4(conversationId, body, subject = \"\") {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/SaveMessageV4/\"),\r\n      \"POST\",\r\n      {\r\n        conversationId: conversationId.toString(),\r\n        body,\r\n        subject\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  updateConversationLastViewedTimestamp() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/Conversation/UpdateLastViewedTimestamp/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Signal that the current user is typing a message\r\n   *\r\n   * Bungie.net sends a number as the conversationId rather than as a string,\r\n   * but both appear to work\r\n   *\r\n   * @param  {BigNumber} conversationId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  userIsTyping(conversationId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Message/UserIsTyping/\"),\r\n      \"POST\",\r\n      {\r\n        conversationId: conversationId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Notification Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRealTimeEvents(p1, p2, timeout) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Notification/Events/{p1}/{p2}/{?timeout}\", {\r\n        timeout\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  getRecentNotificationCount() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Notification/GetCount/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecentNotifications() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Notification/GetRecent/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  resetNotification() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Notification/Reset/\")\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Content Service\r\n\r\n  /**\r\n   * @param {BigNumber} careerId\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  careerId: \"44767\",\r\n   *  title: \"Lead Weapons and Vehicles Artist\",\r\n   *  category: \"Art\",\r\n   *  categoryTag: \"art\",\r\n   *  tags: [],\r\n   *  detail: \"-html-string-\"\r\n   * }\r\n   */\r\n  getCareer(careerId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Careers/{id}/\", {\r\n        id: careerId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  categories: [\r\n   *    {\r\n   *      categoryName: \"Art\",\r\n   *      tag: \"art\",\r\n   *      careers: [\r\n   *        {\r\n   *          careerId: \"44767\",\r\n   *          title: \"Lead Weapons and Vehicle Artist \"\r\n   *        }\r\n   *        ...\r\n   *      ]\r\n   *    }\r\n   *    ...\r\n   *  ]\r\n   * }\r\n   */\r\n  getCareers() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Content/Careers/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getContentById(p1, p2, head) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/GetContentById/{p1}/{p2}/{?head}\", {\r\n        p1,\r\n        p2,\r\n        head\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getContentByTagAndType(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/GetContentByTagAndType/{p1}/{p2}/{p3}/{?,head}\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        p3: params.p3,\r\n        head: params.head\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getContentType(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/GetContentType/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyContent(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Destiny/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyContentV2(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Destiny/V2/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFeaturedArticle() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Content/Site/Featured/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHomepageContent(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Homepage/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHomepageContentV2() {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Homepage/V2/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJobs(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Jobs/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @param {Number} currentPage = 1\r\n   */\r\n  getNews(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/News/{p1}/{p2}/{?itemsperpage,currentpage}\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        itemsperpage: params.itemsPerPage,\r\n        currentpage: params.currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPromoWidget() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Content/Site/Destiny/Promo/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublications(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Publications/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} query - search query\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchCareers(query) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Careers/Search/{?searchtext}\", {\r\n        searchtext: query\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchContentByTagAndType(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/SearchContentByTagAndType/{p1}/{p2}/{p3}/{?head,currentpage,itemsperpage}\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        p3: params.p3,\r\n        head: params.head,\r\n        currentpage: params.currentPage,\r\n        itemsperpage: params.itemsPerPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchContentEx(p1, head) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/SearchEx/{p1}/{?,head}\", {\r\n        p1,\r\n        head\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchContentWithText(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Content/Site/Homepage/{p1}/{?head,ctype,tag,currentpage,searchtext}/\", {\r\n        p1: params.p1,\r\n        head: params.head,\r\n        ctype: params.cType,\r\n        tag: params.tag,\r\n        currentpage: params.currentPage,\r\n        searchtext: params.searchText\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// ExternalSocial Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAggregatedSocialFeed(p1, types) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/ExternalSocial/GetAggregatedSocialFeed/{p1}/{?,types}\", {\r\n        p1,\r\n        types\r\n      })\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Survey Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getSurvey() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Survey/GetSurvey/\")\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Forum Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveFireteamThread(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/Approve/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  changeLockState(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/ChangeLockState/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  changePinState(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/ChangePinState/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createContentComment() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Forum/CreateContentComment/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * When creating a poll, set post.metadata to a JSON-encoded string array of\r\n   * options. For example, if the options are Yes, No, and Maybe, post.metadata\r\n   * would be set to \"[\"Yes\",\"No\",\"Maybe\"]\". The square brackets are included.\r\n   *\r\n   * @param {Object} post\r\n   * @param {String} post.body\r\n   * @param {Number} post.category - which enum for this? flags?\r\n   * @param {Number} post.groupId\r\n   * @param {Boolean} post.isGroupPrivate\r\n   * @param {String|null} post.metadata - null\r\n   * @param {BigNumber} post.parentPostId - postId being replied to\r\n   * @param {Number} post.playerSupportFlags\r\n   * @param {null} post.playerSupportMetadata\r\n   * @param {BigNumber} post.recruitIntensity\r\n   * @param {Boolean} post.recruitMicrophoneRequired - null?\r\n   * @param {BigNumber} post.recruitSlots\r\n   * @param {BigNumber} post.recruitTone\r\n   * @param {Boolean} post.subTopicOverride\r\n   * @param {String} post.subject\r\n   * @param {String} post.tagCategory\r\n   * @param {String} post.tagInput - comma separated\r\n   * @param {String} post.urlLinkOrImage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createPost(post) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Forum/CreatePost/\"),\r\n      \"POST\",\r\n      post\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  deletePost(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/DeletePost/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {Object} post\r\n   * @param {String} [post.body = \"\"]\r\n   * @param {Number} [post.category = 0] - enum?\r\n   * @param {Number} [post.disableBits = 64] - enum for this?\r\n   * @param {Boolean} [post.isGroupPostPrivate = false]\r\n   * @param {String|null} [post.metadata = null]\r\n   * @param {String} [post.subject = \"\"]\r\n   * @param {String} [post.tagCategory = \"\"]\r\n   * @param {String} [post.tagInput = \"\"]\r\n   * @param {String} [post.urlLinkOrImage = \"\"]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editPost(postId, post) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/EditPost/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        body: post.body,\r\n        category: post.category,\r\n        disableBits: post.disableBits,\r\n        isGroupPostPrivate: post.isGroupPostPrivate,\r\n        metata: post.metadata,\r\n        subject: post.subject,\r\n        tagCategory: post.tagCategory,\r\n        tagInput: post.tagInput,\r\n        urlLinkOrImage: post.urlLinkOrImage\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCoreTopicsPaged(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetCoreTopicsPaged/{p1}/{p2}/{p3}/{p4}/\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        p3: params.p3,\r\n        p4: params.p4\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumTagCountEstimate(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetForumTagCountEstimate/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumTagSuggestions(partialTag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetForumTagSuggestions/{p1}/{?,partialtag}\", {\r\n        partialtag: partialTag\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId - postId of the post containing the poll\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPoll(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Poll/{postId}/\", {\r\n        postId: postId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} quantity\r\n   * @param {*} tagsSinceDate\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPopularTags(quantity, tagsSinceDate) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPopularTags/{?quantity,tagsSinceDate}\", {\r\n        quantity,\r\n        tagsSinceDate\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} childPostId\r\n   * @param {Boolean} [showBanned = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostAndParent(childPostId, showBanned = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostAndParent/{childPostId}/{?showbanned}\", {\r\n        childPostId: childPostId.toString(),\r\n        showbanned: showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostAndParentAwaitingApproval(childPostId, showBanned) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostAndParentAwaitingApproval/{childPostId}/{?,showbanned}\", {\r\n        childPostId,\r\n        showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostsThreadedPaged(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostsThreadedPaged/{parentPostId}/{page}/{pageSize}/{replySize}/{getParentPost}/{rootThreadMode}/{sortMode}/{?showbanned}\", {\r\n        parentPostId: params.parentPostId,\r\n        page: params.page,\r\n        pageSize: params.pageSize,\r\n        replySize: params.replySize,\r\n        getParentPost: params.getParentPost,\r\n        rootThreadMode: params.rootThreadMode,\r\n        sortMode: params.sortMode,\r\n        showbanned: params.showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostsThreadedPagedFromChild(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetPostsThreadedPagedFromChild/{childPostId}/{page}/{pageSize}/{replySize}/{rootThreadMode}/{sortMode}/{?showbanned}\", {\r\n        childPostId: params.childPostId,\r\n        page: params.page,\r\n        pageSize: params.pageSize,\r\n        replySize: params.replySize,\r\n        rootThreadMode: params.rootThreadMode,\r\n        sortMode: params.sortMode,\r\n        showbanned: params.showBanned\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecruitmentThreadSummaries() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Forum/Recruit/Summaries/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTopicForContent(contentId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetTopicForContent/{contentId}/\", {\r\n        contentId\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTopicsPaged(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/GetTopicsPaged/{page}/{pageSize}/{group}/{sort}/{quickDate}/{categoryFilter}/{?tagstring}\", {\r\n        page: params.page,\r\n        pageSize: params.pageSize,\r\n        group: params.group,\r\n        sort: params.sort,\r\n        quickDate: params.quickDate,\r\n        categoryFilter: params.categoryFilter,\r\n        tagstring: params.tagString\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  joinFireteamThread(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/Join/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  kickBanFireteamApplicant(postId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/{postId}/{membershipId}/\", {\r\n        postId: postId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  leaveFireteamThread(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Recruit/Leave/{id}/\", {\r\n        id: postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} answerPostId\r\n   * @param {BigNumber} questionTopicId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  markReplyAsAnswer(answerPostId, questionTopicId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/MarkReplyAsAnswer/{answer}/{question}/\", {\r\n        answer: answerPostId.toString(),\r\n        question: questionTopicId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {BigNumber} moderatedItemId\r\n   * @param {Number} reason\r\n   * @param {String} [comments = \"group post ban\"]\r\n   * @param {BungieNet.enums.affectedItemType} [moderatedItemType = BungieNet.enums.affectedItemType.post]\r\n   * @param {BungieNet.enums.requestedPunishment} [requestedPunishment = BungieNet.enums.requestedPunishment.ban]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderateGroupPost(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Post/{postId}/GroupModerate/\", {\r\n        postId: params.postId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        comments: params.comments,\r\n        moderatedItemId: params.moderatedItemId.toString(),\r\n        moderatedItemType: params.moderatedItemType,\r\n        reason: params.reason,\r\n        requestedPunishment: params.requestedPunishment\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderatePost(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Post/{p1}/Moderate/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  moderateTag(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Tags/{p1}/Moderate/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * - payload is set to null, this may result in a bug\r\n   * @param {BigNumber} pollId\r\n   * @param {Number} optionIndex - 0-based index of the option being voted for\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  pollVote(pollId, optionIndex) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/Poll/Vote/{pollId}/{index}/\", {\r\n        pollId: pollId.toString(),\r\n        optionIndex\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} postId\r\n   * @param {Number} rating - 0 to 100, currently only 0 OR 100\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  ratePost(postId, rating) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/RatePost/{postId}/{rating}/\", {\r\n        postId: postId.toString(),\r\n        rating\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} topicId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unmarkReplyAsAnswer(topicId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Forum/UnmarkReplyAsAnswer/{topicId}/\", {\r\n        topicId: topicId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Activity Service\r\n\r\n  /**\r\n   * @param {String} tag - ie. #destiny, hash included\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followTag(tag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Tag/Follow/{?tag}\", {\r\n        tag\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{id}/Follow/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {*} p1\r\n   * @param {*} p2\r\n   * @param {Number} [currentPage = 1]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApplicationActivityForUser(p1, p2, currentPage = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/Application/{p2}/{?page}\", {\r\n        p1,\r\n        p2,\r\n        page: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @deprecated 2016-09-10\r\n   */\r\n  getAggregatedActivitiesForCurrentUser(typeFilter, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Aggregation/{?typefilter,format}\", {\r\n        typefilter: typeFilter,\r\n        format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Following/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByCurrentUserV2(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Following/V2/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByUser(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Following/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getEntitiesFollowedByUserV2(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Following/V2/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFollowersOfTag(tag, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Tag/Followers/{?tag,itemsperpage,currentpage}\", {\r\n        tag,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFollowersOfUser(membershipId, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{membershipId}/Followers/{?itemsperpage,currentpage}\", {\r\n        membershipId,\r\n        itemsperpage: itemsPerPage,\r\n        currentpage: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumActivitiesForUser(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/{?itemsperpage,currentpage,format}\", {\r\n        p1: params.p1,\r\n        itemsperpage: params.itemsPerPage,\r\n        currentpage: params.currentPage,\r\n        format: params.format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getForumActivitiesForUserV2(p1, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/ForumsV2/{?currentpage,format}\", {\r\n        p1,\r\n        currentpage: currentPage,\r\n        format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFriends() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Friends/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFriendsAllNoPresence(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Friends/AllNoPresence/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFriendsPaged(membershipType, page) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Friends/{membershipType}/{page}/\", {\r\n        membershipType,\r\n        page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedByCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Following/Groups/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedByUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{id}/Following/Groups/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedPagedByCurrentUser(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Following/Groups/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedPagedByUser(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Following/Groups/Paged/{p2}/\", {\r\n        p1,\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLikeAndShareActivityForUser(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/LikesAndShares/{?itemsperpage,currentpage,format}\", {\r\n        p1: params.p1,\r\n        itemsperpage: params.itemsPerPage,\r\n        currentpage: params.currentPage,\r\n        format: params.format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLikeAndShareActivityForUserV2(p1, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/LikesAndSharesV2/{?currentpage,format}\", {\r\n        p1,\r\n        currentpage: currentPage,\r\n        format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLikeShareAndForumActivityForUser(p1, currentPage, format) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{p1}/Activities/LikeShareAndForum/{?currentpage,format}\", {\r\n        p1,\r\n        currentpage: currentPage,\r\n        format\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUsersFollowedByCurrentUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Activity/Following/Users/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} tag - ie. #destiny, with hash\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowTag(tag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/Tag/Unfollow/{?tag}\", {\r\n        tag\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Activity/User/{id}/Unfollow/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Group Service\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveAllPending(groupId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/ApproveAll/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveGroupMembership(groupId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Approve/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approveGroupMembershipV2(groupId, membershipId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/ApproveV2/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @param {BigNumber[]} membershipIds\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  approvePendingForList(groupId, message, membershipIds) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/ApproveList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        membershipIds: membershipIds.map(bn => bn.toString()),\r\n        message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} comment\r\n   * @param {BungieNet.enums.moderatorRequestedPunishment} - might not be right enum\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  banMember(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Ban/\", {\r\n        groupId: params.groupId.toString(),\r\n        membershipId: params.membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        comment: params.comment,\r\n        length: params.length\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} allyGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  breakAlliance(groupId, allyGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Relationship/{allyGroupId}/BreakAlliance/\", {\r\n        groupId: groupId.toString(),\r\n        allyGroupId: allyGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  breakAlliances(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/BreakAlliances/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createGroup() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/Create/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} details\r\n   * @param {String} details.about\r\n   * @param {Boolean} details.allowChat\r\n   * @param {*[]} details.attributes\r\n   * @param {String} details.avatarImageIndex\r\n   * @param {*[]} details.clanMembershipTypes\r\n   * @param {Boolean} details.isDefaultPostPublic\r\n   * @param {Boolean} details.isPublic\r\n   * @param {Boolean} details.isPublicTopicAdminOnly\r\n   * @param {String} details.locale\r\n   * @param {BigNumber} details.membershipOption\r\n   * @param {String} details.motto\r\n   * @param {String} detail.name\r\n   * @param {String} detail.tags - \"#tag1,#tag2,#tag3\"\r\n   * @param {String} detail.theme\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createGroupV2(details) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/Create/V2/\"),\r\n      \"POST\",\r\n      details\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  createMinimalGroup(name, about) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/Create/Minimal/\"),\r\n      \"POST\",\r\n      {\r\n        groupName: name,\r\n        groupAbout: about\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyAllPending(groupId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/DenyAll/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyGroupMembership(groupId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Deny/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyGroupMembershipV2(groupId, membershipId, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/DenyV2/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {String} message\r\n   * @param {BigNumber[]} membershipIds\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  denyPendingForList(groupId, message, membershipIds) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/DenyList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message,\r\n        membershipIds: membershipIds.map(bn => bn.toString())\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType}\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  diableClanForGroup(groupId, clanMembershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clans/Disable/{clanMembershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  disbandAlliance(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/BreakAllAlliances/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Edit/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {BungieNet.enums.groupMemberType} groupMembershipType\r\n   * @param {*} [clanPlatformType = 0]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editGroupMembership(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/SetMembershipType/{groupMembershipType}/{?clanPlatformType}\", {\r\n        groupId: params.groupId.toString(),\r\n        membershipId: params.membershipId.toString(),\r\n        groupMembershipType: params.groupMembershipType,\r\n        clanPlatformType: params.clanPlatformType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Object} details\r\n   * @param {Boolean} details.allowChat\r\n   * @param {BungieNet.enums.chatSecuritySetting} details.chatSecurity\r\n   * @param {BungieNet.enums.groupPostPublicity} details.defaultPublicity\r\n   * @param {Boolean} details.enableInvitationMessagingForAdmins\r\n   * @param {BungieNet.enums.groupHomepage} details.homepage\r\n   * @param {Boolean} details.isPublic\r\n   * @param {Boolean} details.isPublicTopicAdminOnly\r\n   * @param {String} details.locale\r\n   * @param {BungieNet.enums.membershipOption} details.membershipOption\r\n   * @param {String} details.about\r\n   * @param {String} details.clanCallSign\r\n   * @param {String} details.motto\r\n   * @param {String} details.name\r\n   * @param {String} details.tags - \"#tag1,#tag2,#tag3\"\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editGroupV2(groupId, details) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/EditV2/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      details\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {String} clanName\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  enableClanForGroup(groupId, clanMembershipType, clanName) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clans/Enable/{clanMembershipType}/{?clanName}\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType,\r\n        clanName\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followGroupsWithGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/FollowList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} followGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  followGroupWithGroup(groupId, followGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Follow/{followGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        followGroupId: followGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} itemsPerPage\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminsOfGroup(groupId, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Admins/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage,\r\n        currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} itemsPerPage\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminsOfGroupV2(groupId, itemsPerPage, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/AdminsV2/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage,\r\n        currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllFoundedGroupsForMember(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{id}/Founded/All/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllGroupsForCurrentMember(clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyGroups/All/{?clanonly,populatefriends}\", {\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllGroupsForMember(membershipId, clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/All/{?clanonly,populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        clanonly: clanOnly,\r\n        populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAlliedGroups(groupId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/{?currentPage,populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableGroupAvatars() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/GetAvailableAvatars/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableGroupThemes() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/GetAvailableThemes/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBannedMembersOfGroup(groupId, currentPage, itemsPerPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Banned/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage,\r\n        currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBannedMembersOfGroupV2(groupId, currentPage, itemsPerPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/BannedV2/{?itemsPerPage,currentPage}\", {\r\n        groupId: groupId.toString(),\r\n        itemsPerPage,\r\n        currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getClanAttributeDefinitions() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/GetClanAttributeDefinitions/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDeletedGroupsForCurrentMember() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/MyGroups/Deleted/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFoundedGroupsForMember(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/Founded/{currentPage}/{?clanonly,populatefriends}\", {\r\n        membershipId: params.membershipId.toString(),\r\n        currentPage: params.currentPage,\r\n        clanonly: params.clanOnly,\r\n        populatefriends: params.populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroup(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} groupName\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupByName(groupName, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/Name/{groupName}/{?populatefriends}\", {\r\n        groupName,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowedByGroup(groupId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Following/{currentPage}/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupsFollowingGroup(groupId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/FollowedBy/{currentPage}/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {String} partialTag\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGroupTagSuggestions(partialTag) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/GetGroupTagSuggestions/{?partialtag}\", {\r\n        partialtag: partialTag\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForCurrentMember(clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyGroups/{?clanonly,populatefriends}\", {\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForCurrentMemberV2(currentPage, clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyGroups/V2/{currentPage}/{?clanonly,populatefriends}\", {\r\n        currentPage,\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForMember(membershipId, clanOnly = false, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/{?clanonly,populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        clanonly: clanOnly,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [clanOnly = false]\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForMemberV2(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/Joined/{currentPage}/{?clanonly,populatefriends}\", {\r\n        membershipId: params.membershipId.toString(),\r\n        currentPage: params.currentPage,\r\n        clanonly: params.clanOnly,\r\n        populatefriends: params.populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getJoinedGroupsForMemberV3(membershipId, currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/JoinedV3/{currentPage}/{?populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {BungieNet.enums.groupMemberType}\r\n   * @param {*} [sort = 0]\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfClan(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/ClanMembers/{?currentPage,memberType,sort,platformType}\", {\r\n        groupId: params.groupId.toString(),\r\n        currentPage: params.currentPage,\r\n        memberType: params.memberType,\r\n        sort: params.sort,\r\n        platformType: params.platformType\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @param {BungieNet.enums.groupMemberType} memberType\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @param {*} sort\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfGroup(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{?itemsPerPage,currentPage,memberType,platformType,sort}\", {\r\n        groupId: params.groupId.toString(),\r\n        itemsPerPage: params.itemsPerPage,\r\n        currentPage: params.currentPage,\r\n        memberType: params.memberType,\r\n        platformType: params.platformType,\r\n        sort: params.sort\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @param {BungieNet.enums.groupMemberType} memberType\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @param {*} sort\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfGroupV2(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/MembersV2/{?itemsPerPage,currentPage,memberType,platformType,sort}\", {\r\n        groupId: params.groupId.toString(),\r\n        itemsPerPage: params.itemsPerPage,\r\n        currentPage: params.currentPage,\r\n        memberType: params.memberType,\r\n        platformType: params.platformType,\r\n        sort: params.sort\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @param {Number} itemsPerPage\r\n   * @param {BungieNet.enums.groupMemberType} memberType\r\n   * @param {BungieNet.enums.bungieMembershipType} platformType\r\n   * @param {*} sort\r\n   * @param {String} nameSearch\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembersOfGroupV3(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/MembersV3/{?itemsPerPage,currentPage,memberType,platformType,sort,nameSearch}\", {\r\n        groupId: params.groupId.toString(),\r\n        itemsPerPage: params.itemsPerPage,\r\n        currentPage: params.currentPage,\r\n        memberType: params.memberType,\r\n        platformType: params.platformType,\r\n        sort: params.sort,\r\n        nameSearch: params.nameSearch\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: [\r\n   *  {\r\n   *    groupdId: \"-BigNumber-\",\r\n   *    membershipType: 2,\r\n   *    membershipId: \"-BigNumber-\"\r\n   *  }\r\n   * ]\r\n   */\r\n  getMyClanMemberships() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Group/MyClans/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingClanMemberships(groupId, clanMembershipType, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clan/{clanMembershipType}/Pending/{currentPage}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType,\r\n        currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForCurrentMember(populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyPendingGroups/{?populatefriends}\", {\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForCurrentMemberV2(currentPage, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyPendingGroupsV2/{currentPage}/{?populatefriends}\", {\r\n        currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForMember(membershipId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/User/{membershipId}/Pending/{?populatefriends}\", {\r\n        membershipId: membershipId.toString(),\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Number} currentPage\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingGroupsForMemberV2(currentPage, populateFriends) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyPendingGroups/V2/{currentPage}/{?populatefriends}\", {\r\n        currentPage,\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingMemberships(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/Pending/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Number} currentPage\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPendingMembershipsV2(groupId, currentPage) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/PendingV2/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecommendedGroups(populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/Recommended/{?populatefriends}\", {\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} params\r\n   * @param {Object} params.contents\r\n   * @param {String} params.contents.searchValue\r\n   * @param {BungieNet.enums.groupTypeSearchFilter} params.contents.searchType\r\n   * @param {*} params.creationDate\r\n   * @param {Number} params.currentPage\r\n   * @param {BungieNet.enums.groupMemberCountFilter} params.groupMemberCountFilter\r\n   * @param {Number} params.itemsPerPage\r\n   * @param {String} params.localeFilter\r\n   * @param {BungieNet.enums.bungieMembershipType} params.membershipType\r\n   * @param {*} params.sortBy\r\n   * @param {String} params.tagText\r\n   * @param {Boolean} [populatefriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  groupSearch(params, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/Search/{?populatefriends}\", {\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      params\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {String} title\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteClanMember(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/InviteToClan/{membershipId}/{clanMembershipType}/\", {\r\n        groupId: params.groupId,\r\n        membershipId: params.membershipId.toString(),\r\n        clanMembershipType: params.clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n        title: params.title,\r\n        message: params.message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {String} title\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteGroupMember(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Invite/{membershipId}/\", {\r\n        groupId: params.groupId.toString(),\r\n        membershipId: params.membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        title: params.title,\r\n        message: params.message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber[]} targetIds\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteManyToJoin(groupId, targetIds, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/InviteMany/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        targetIds: targetIds.map(bn => bn.toString()),\r\n        messageContent: {\r\n          message\r\n        }\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} allyGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  inviteToJoinAlliance(groupId, allyGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/Invite/{allyGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        allyGroupId: allyGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @param {String} message\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  joinClanForGroup(groupId, clanMembershipType, message) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/{clanMembershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n        message\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanPlatformType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  kickMember(groupId, membershipId, clanPlatformType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Kick/{?clanPlatformType}\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString(),\r\n        clanPlatformType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  leaveClanForGroup(groupId, clanMembershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Clans/Leave/{clanMembershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  migrate(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{p1}/Migrate/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideFounderAdmin(groupId, membershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Admin/FounderOverride/{membershipType}/\", {\r\n        groupId: groupId.toString(),\r\n        membershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.bungieMembershipType} clanMembershipType\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  refreshClanSettingsInDestiny(clanMembershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/MyClans/Refresh/{clanMembershipType}/\", {\r\n        clanMembershipType\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  requestGroupMembership(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/Apply/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  requestGroupMembershipV2(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/ApplyV2/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} allyGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  requestToJoinAlliance(groupId, allyGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Allies/RequestToJoin/{allyGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        allyGroupId: allyGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {Boolean} [populateFriends = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rescindGroupMembership(groupId, populateFriends = false) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/Rescind/{?populatefriends}\", {\r\n        groupId: groupId.toString(),\r\n        populatefriends: populateFriends\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setGroupAsAlliance(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/SetAsAlliance/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {*} p2\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setPrivacy(groupId, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Privacy/{p2}/\", {\r\n        groupId: groupId.toString(),\r\n        p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unbanMember(groupId, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Members/{membershipId}/Unban/\", {\r\n        groupId: groupId.toString(),\r\n        membershipId: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  undeleteGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Undelete/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowAllGroupsWithGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/UnfollowAll/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowGroupsWithGroup(groupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/UnfollowList/\", {\r\n        groupId: groupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} groupId\r\n   * @param {BigNumber} followGroupId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unfollowGroupWithGroup(groupId, followGroupId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Group/{groupId}/Unfollow/{followGroupId}/\", {\r\n        groupId: groupId.toString(),\r\n        followGroupId: followGroupId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Ignore Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  flagItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/Flag/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getIgnoresForUser() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/MyIgnores/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getIgnoreStatusForPost(postId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Ignore/MyIgnores/Posts/{postId}/\", {\r\n        postId: postId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getIgnoreStatusForUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Ignore/MyIgnores/Users/{membershipId}/\", {\r\n        membershipId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getReportContext(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Ignore/ReportContext/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  ignoreItem(params) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/Ignore/\"),\r\n      \"POST\",\r\n      {\r\n        ignoredItemId: params.ignoredItemId,\r\n        ignoredItemType: params.ignoredItemType,\r\n        comment: params.comment,\r\n        reason: params.reason,\r\n        itemContextId: params.itemContextId,\r\n        itemContextType: params.itemContextType,\r\n        ModeratorRequest: params.moderatorRequest\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  myLastReport() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/MyLastReport/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  unignoreItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Ignore/Unignore/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Game Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPlayerGamesById(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Game/GetPlayerGamesById/{p1}/\", {\r\n        p1\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  reachModelSneakerNet(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Game/ReachModelSneakerNet/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Admin Service\r\n\r\n  /**\r\n   * @param {String} username - search term\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  adminUserSearch(username) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/Search/{?username}\", {\r\n        username\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  bulkEditPost() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/BulkEditPost/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminHistory(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/GlobalHistory/{p1}/{p2}/{?membershipFilter,startdate,enddate}\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        membershipFilter: params.membershipFilter,\r\n        startdate: params.startDate,\r\n        enddate: params.endDate\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAssignedReports() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Assigned/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} [currentPage = 1]\r\n   * @param {Number} [itemsPerPage = 1]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDisciplinedReportsForMember(membershipId, currentPage = 1, itemsPerPage = 1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/Reports/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n        currentPage,\r\n        itemsPerPage\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {*} p2\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecentDisciplineAndFlagHistoryForMember(membershipId, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/RecentIncludingFlags/{p2}/\", {\r\n        id: membershipId.toString(),\r\n        p2\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getResolvedReports() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Reports/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  membershipId: \"-id-\",\r\n   *  isProfileBanned: bool\r\n   *  isForumBanned: bool\r\n   *  isMsgBanned: bool,\r\n   *  isGroupWallBanned: bool\r\n   * }\r\n   */\r\n  getUserBanState(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/GetBanState/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @param {Number} currentPage - 0-based\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUserPostHistory(membershipId, currentPage = 0) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/PostHistory/{page}/\", {\r\n        id: membershipId.toString(),\r\n        page: currentPage\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUserWebHistoryClientIpHistory(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/GetWebClientIpHistory/\", {\r\n        id: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  globallyIgnoreItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Ignores/GloballyIgnore/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideBanOnUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/SetBan/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideGlobalIgnore() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Ignores/OverrideGlobalIgnore/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideGroupWallBanOnUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/SetGroupWallBan/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overrideMsgBanOnUser(membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Admin/Member/{id}/SetMsgBan/\", {\r\n        id: membershipId.toString()\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  overturnReport() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Reports/Overturn/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} reportId\r\n   * @param {BigNumber} reason\r\n   * @param {BigNumber} banLength\r\n   * @param {Number} result\r\n   * @param {BigNumber} reportId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  resolveReport(params) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Admin/Assigned/Resolve/\"),\r\n      \"POST\",\r\n      {\r\n        banLength: params.banLength.toString(),\r\n        comments: params.comments,\r\n        reason: params.reason.toString(),\r\n        reportId: params.reportId.toString(),\r\n        result: params.result\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Token Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  applyOfferToCurrentDestinyMembership(p1, p2) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/ApplyOfferToCurrentDestinyMembership/{p1}/{p2}/\", {\r\n        p1,\r\n        p2\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  breakBond() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/BreakBond/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  claimAndApplyOnToken(tokenType, redeemCode) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/ClaimAndApplyToken/{tokenType}/\", {\r\n        tokenType\r\n      }),\r\n      \"POST\",\r\n      {\r\n        redeemCode\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  claimToken(redeemCode) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/Claim/\"),\r\n      \"POST\",\r\n      {\r\n        redeemCode\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  consumeMarketplacePlatformCodeOffer(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/ConsumeMarketplacePlatformCodeOffer/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCurrentUserOfferHistory() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/OfferHistory/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: {\r\n   *  IsThrottled: false,\r\n   *  ThrottleExpires: \"-iso-date-string\",\r\n   *  NumberOfFailedAttemptsToday: 0,\r\n   *  MaximumFailedAttemptsPerDay: 3,\r\n   *  AgeVerificationState: true\r\n   * }\r\n   */\r\n  getCurrentUserThrottleState() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/ThrottleState/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRAFEligibility() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/GetEligibility/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  marketplacePlatformCodeOfferHistory() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/MarketplacePlatformCodeOfferHistory/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafClaim() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/Claim/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafGenerateReferralCode(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Tokens/RAF/GenerateReferralCode/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafGetNewPlayerBondDetails() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/GetNewPlayerBondDetails/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  rafGetVeteranBondDetails() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/RAF/GetVeteranBondDetails/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  verifyAge() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Tokens/VerifyAge/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Destiny Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  buyItem() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/BuyItem/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} itemId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  equipItem(membershipType, itemId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/EquipItem/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType,\r\n        itemId: itemId.toString(),\r\n        characterId: characterId.toString()\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber[]} itemIds\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  equipItems(membershipType, characterId, itemIds) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/EquipItems/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType,\r\n        characterId: characterId.toString(),\r\n        itemIds: itemIds.map(bn => bn.toString())\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccount(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAccountSummary(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Summary/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getActivityBlob(e) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/GetActivityBlob/{e}/\", {\r\n        e\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BungieNet.enums.destinyActivityModeType} [mode = BungieNet.enums.destinyActivityModeType.none]\r\n   * @param {Number} [count = 25] number of results to return\r\n   * @param {Number} [page = 1] 1-based\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getActivityHistory(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/ActivityHistory/{membershipType}/{destinyMembershipId}/{characterId}/{?mode,count,page}\", {\r\n        membershipType: params.membershipType,\r\n        destinyMembershipId: params.destinyMembershipId.toString(),\r\n        characterId: params.characterId.toString(),\r\n        mode: params.mode,\r\n        count: params.count,\r\n        page: params.page\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForAccount(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Advisors/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForCharacter(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Advisors/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForCharacterV2(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Advisors/V2/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdvisorsForCurrentCharacter(membershipType, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Advisors/\", {\r\n        membershipType,\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllItemsSummary(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Items/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAllVendorsForCurrentCharacter(membershipType, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendors/\", {\r\n        membershipType,\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType}\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getBondAdvisors(membershipType) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Advisors/Bonds/\", {\r\n        membershipType\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacter(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Complete/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterActivities(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Activities/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterInventory(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterInventorySummary(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/Summary/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterProgression(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Progression/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCharacterSummary(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getClanLeaderboards(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/ClanLeaderboards/{p1}/{?modes,statid,maxtop}\", {\r\n        p1: params.p1,\r\n        modes: params.modes,\r\n        statid: params.statid,\r\n        maxtop: params.maxtop\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyAggregateActivityStats(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/AggregateActivityStats/{membershipType}/{destinyMembershipId}/{characterId}/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyExplorerItems(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Explorer/Items/{?params*}\", {\r\n        params\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyExplorerTalentNodeSteps(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Explorer/TalentNodeSteps/{?params*}\", {\r\n        params\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyLiveTileContentItems() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/LiveTiles/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinyManifest() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Manifest/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getDestinySingleDefinition(definitionType, definitionId, version) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Manifest/{definitionType}/{definitionId}/{?version}\", {\r\n        definitionType,\r\n        definitionId,\r\n        version\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getExcellenceBadges(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/GetExcellenceBadges/{membershipType}/{destinyMembershipId}/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGrimoireByMembership(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vanguard/Grimoire/{membershipType}/{destinyMembershipId}/{?flavour,single}\", {\r\n        membershipType: params.membershipType,\r\n        destinyMembershipId: params.destinyMembershipId,\r\n        flavour: params.flavour,\r\n        single: params.single\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGrimoireDefinition() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Vanguard/Grimoire/Definition/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Object} options\r\n   * @param {BungieNet.enums.bungieMembershipType} options.membershipType\r\n   * @param {BigNumber} options.destinyMembershipId\r\n   * @param {BigNumber} options.characterId\r\n   * @param {BungieNet.enums.periodType} options.periodType\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} options.modes\r\n   * @param {BungieNet.enums.destinyStatsGroupType[]} options.groups\r\n   * @param {String} options.monthStart\r\n   * @param {String} options.monthEnd\r\n   * @param {String} options.dayStart\r\n   * @param {String} options.dayEnd\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHistoricalStats(options) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/{mType}/{dMID}/{cId}/{?pType,mds,grps,mstart,mend,dstart,dend}\", {\r\n        mType: options.membershipType,\r\n        dMID: options.destinyMembershipId,\r\n        cId: options.characterId,\r\n        pType: options.periodType,\r\n        mds: options.modes.join(\",\"),\r\n        grps: options.groups.join(\",\"),\r\n        mstart: options.monthStart,\r\n        mend: options.monthEnd,\r\n        dstart: options.dayStart,\r\n        dend: options.dayEnd\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHistoricalStatsDefinition() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Stats/Definition/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BungieNet.enums.destinyStatsGroupType[]} groups\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getHistoricalStatsForAccount(membershipType, destinyMembershipId, groups) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/Account/{membershipType}/{destinyMembershipId}/{?groups}\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        groups\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} itemInstanceId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getItemDetail(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/{itemInstanceId}/\", {\r\n        membershipType: params.membershipType,\r\n        destinyMembershipId: params.destinyMembershipId.toString(),\r\n        characterId: params.characterId.toString(),\r\n        itemInstanceId: params.itemInstanceId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getItemReferenceDetail(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{p1}/Account/{p2}/Character/{p3}/ItemReference/{p4}/\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        p3: params.p3,\r\n        p4: params.p4\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} modes\r\n   * @param {*} statid\r\n   * @param {*} maxtop\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLeaderboards(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/Leaderboards/{membershipType}/{destinyMembershipId}/{?modes,statid,maxtop}\", {\r\n        membershipType: params.membershipType,\r\n        destinyMembershipId: params.destinyMembershipId.toString(),\r\n        modes: params.modes.join(\",\"),\r\n        statid: params.statid,\r\n        maxtop: params.maxtop\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} modes\r\n   * @param {*} statid\r\n   * @param {*} maxtop\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLeaderboardsForCharacter(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/Leaderboards/{membershipType}/{destinyMembershipId}/{characterId}/{?modes,statid,maxtop}\", {\r\n        membershipType: params.membershipType,\r\n        destinyMembershipId: params.destinyMembershipId.toString(),\r\n        characterId: params.characterId.toString(),\r\n        modes: params.modes.join(\",\"),\r\n        statid: params.statid,\r\n        maxtop: params.maxtop\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.destinyActivityModeType[]} modes\r\n   * @param {*} code\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getLeaderboardsForPsn(modes, code) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/LeaderboardsForPsn/{?modes,code}\", {\r\n        modes: modes.join(\",\"),\r\n        code\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.eums.membershipType} membershipType\r\n   * @param {String} displayName\r\n   * @param {Boolean} [ignoreCase = false]\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMembershipIdByDisplayName(membershipType, displayName, ignoreCase) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Stats/GetMembershipIdByDisplayName/{displayName}/{?ignorecase}\", {\r\n        membershipType,\r\n        displayName,\r\n        ignorecase: ignoreCase\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @param {Boolean} flavour\r\n   * @param {BigNumber} single\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getMyGrimoire(membershipType, flavour, single) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vanguard/Grimoire/{membershipType}/{?flavour,single}\", {\r\n        membershipType,\r\n        flavour,\r\n        single\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} activityInstanceId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPostGameCarnageReport(activityInstanceId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/PostGameCarnageReport/{activityInstanceId}/\", {\r\n        activityInstanceId: activityInstanceId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicAdvisors() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Advisors/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicAdvisorsV2() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Advisors/V2/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicVendor(vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vendors/{vendorId}/\", {\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicVendorWithMetadata(vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Vendors/{vendorId}/Metadata/\", {\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getPublicXurVendor() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Advisors/Xur/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @param {BigNumber} recordBookHash\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getRecordBookCompletionStatus(membershipType, recordBookHash) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/RecordBooks/{recordBookHash}/Completition/\", {\r\n        membershipType,\r\n        recordBookHash: recordBookHash.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getSpecialEventAdvisors() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/Events/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getTriumphs(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/Account/{destinyMembershipId}/Triumphs/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getUniqueWeaponHistory(membershipType, destinyMembershipId, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/Stats/UniqueWeapons/{membershipType}/{destinyMembershipId}/{characterId}/\", {\r\n        membershipType,\r\n        destinyMembershipId: destinyMembershipId.toString(),\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVault(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Vault/{?accountId}\", {\r\n        membershipType,\r\n        accountId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} destinyMembershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVaultSummary(membershipType, destinyMembershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Vault/Summary/{?accountId}\", {\r\n        membershipType,\r\n        accountId: destinyMembershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorForCurrentCharacter(membershipType, characterId, vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/\", {\r\n        membershipType,\r\n        characterId: characterId.toString(),\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorForCurrentCharacterWithMetadata(membershipType, characterId, vendorId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/Metadata/\", {\r\n        membershipType,\r\n        characterId: characterId.toString(),\r\n        vendorId: vendorId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @param {BigNumber} itemId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorItemDetailForCurrentUser(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/Item/{itemId}/\", {\r\n        membershipType: params.membershipType,\r\n        characterId: params.characterId.toString(),\r\n        vendorId: params.vendorId.toString(),\r\n        itemId: params.itemId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} vendorId\r\n   * @param {BigNumber} itemId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorItemDetailForCurrentUserWithMetadata(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorId}/Item/{itemId}/Metadata/\", {\r\n        membershipType: params.membershipType,\r\n        characterId: params.characterId.toString(),\r\n        vendorId: params.vendorId.toString(),\r\n        itemId: params.itemId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} characterId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getVendorSummariesForCurrentCharacter(membershipType, characterId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendors/Summaries/\", {\r\n        membershipType,\r\n        characterId: characterId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  refundItem(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/{p1}/RefundItem/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {String} displayName\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  searchDestinyPlayer(membershipType, displayName) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/Destiny/SearchDestinyPlayer/{membershipType}/{displayName}/\", {\r\n        membershipType,\r\n        displayName\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} itemId\r\n   * @param {BigNumber} characterId\r\n   * @param {Boolean} state - true to lock, false to unlock\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setItemLockState(params) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/SetLockState/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: params.membershipType,\r\n        itemId: params.itemId.toString(),\r\n        characterId: params.characterId.toString(),\r\n        state: params.state\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {BigNumber} membershipId\r\n   * @param {BigNumber} characterId\r\n   * @param {BigNumber} itemId\r\n   * @param {Boolean} state - true to track, false to not track\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  setQuestTrackedState(params) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/SetQuestTrackedState/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: params.membershipType,\r\n        membershipId: params.membershipId.toString(),\r\n        characterId: params.characterId.toString(),\r\n        itemId: params.itemId.toString(),\r\n        state: params.state\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.membershipType} membershipType\r\n   * @param {Number} itemReferenceHash\r\n   * @param {BigNumber} itemId\r\n   * @param {Number} stackSize\r\n   * @param {BigNumber} characterId\r\n   * @param {Boolean} transferToVault\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  transferItem(params) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/Destiny/TransferItem/\"),\r\n      \"POST\",\r\n      {\r\n        membershipType: params.membershipType.toString(),\r\n        itemReferenceHash: params.itemReferenceHash,\r\n        itemId: params.itemId.toString(),\r\n        stackSize: params.stackSize,\r\n        characterId: params.characterId.toString(),\r\n        transferToVault: params.transferToVault\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Community Content Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  adminSetCommunityLiveMemberBanStatus(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Partnerships/{p1}/{p2}/Ban/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  adminSetCommunityLiveMemberFeatureStatus(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Partnerships/{p1}/{p2}/Feature/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  alterApprovalState(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/AlterApprovalState/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  editContent(p1) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Edit/{p1}/\", {\r\n        p1\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAdminCommunityLiveStatuses(p1, p2, name) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Admin/{p1}/{p2}/{?name}\", {\r\n        p1,\r\n        p2,\r\n        name\r\n      }),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getApprovalQueue(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Queue/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityContent(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Get/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityFeaturedActivityModes() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/CommunityContent/Live/ActivityModes/Featured/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityLiveStatuses(params) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/All/{p1}/{p2}/{p3}/{?modeHash}\", {\r\n        p1: params.p1,\r\n        p2: params.p2,\r\n        p3: params.p3,\r\n        modeHash: params.modeHash\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityLiveStatusesForClanmates(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Clan/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommunityLiveStatusesForFriends(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Friends/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getFeaturedCommunityLiveStatuses(p1, p2, p3) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Features/{p1}/{p2}/{p3}/\", {\r\n        p1,\r\n        p2,\r\n        p3\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {BungieNet.enums.partnershipType} partnershipType\r\n   * @param {BungieNet.enums.bungieMembershipType} membershipType\r\n   * @param {BigNumber} membershipId\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getStreamingStatusForMember(partnershipType, membershipType, membershipId) {\r\n    return this._serviceRequest(new Request(\r\n      URI.expand(\"/CommunityContent/Live/Users/{pType}/{mType}/{mId}/\", {\r\n        pType: partnershipType,\r\n        mType: membershipType,\r\n        mId: membershipId.toString()\r\n      })\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  submitContent() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"/CommunityContent/Submit/\"),\r\n      \"POST\",\r\n      {\r\n\r\n      }\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  /// Core Service\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getAvailableLocales() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(\"//GetAvailableLocales\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getCommonSettings() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(\"//Settings/\")\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} includeStreaming\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getGlobalAlerts(includeStreaming = true) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(URITemplate.expand(\"//GlobalAlerts/{?includestreaming}\", {\r\n        includestreaming: includeStreaming\r\n      }))\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   */\r\n  getSystemStatus(p1) {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(URITemplate.expand(\"//Status/{p1}/\", {\r\n        p1\r\n      }))\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * @return {Promise.<Platform.Response>}\r\n   * @example\r\n   * Response: \"Hello World\"\r\n   */\r\n  helloWorld() {\r\n    return this._serviceRequest(new Request(\r\n      new URI(\"\").path(\"//HelloWorld/\")\r\n    ));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Header key-name pairs\r\n * @type {Object}\r\n */\r\nPlatform.headers = {\r\n  apiKey: \"X-API-Key\",\r\n  contentType: \"Content-Type\"\r\n};\r\n\r\n/**\r\n * API content type\r\n * @type {String}\r\n */\r\nPlatform.contentType = \"application/json\";\r\n\r\n/**\r\n * Platform event key-name pairs\r\n * @type {Object}\r\n */\r\nPlatform.events = {\r\n\r\n  activeFrame: \"platformActiveRequest\",\r\n  queuedFrame: \"queuedFrame\",\r\n\r\n  frameBeforeSend: \"frameBeforeSend\",\r\n\r\n  frameHttpError: \"frameHttpError\",\r\n  frameHttpSuccess: \"frameHttpSuccess\",\r\n  frameHttpDone: \"frameHttpDone\",\r\n\r\n  frameError: \"frameError\",\r\n  frameSuccess: \"frameSuccess\",\r\n  frameDone: \"frameDone\"\r\n\r\n};\r\n\r\n/**\r\n * Default platform options\r\n * @type {Object}\r\n */\r\nPlatform.defaultOptions = {\r\n  apiKey: \"\",\r\n  maxConcurrent: -1,\r\n  timeout: 5000\r\n};\r\n"]}