{"version":3,"sources":["../../src/BungieNet/Frame.js"],"names":["Frame","_id","generateId","platform","request","response","platformRequest","state","none","serviceResolve","serviceReject","id","waiting","active","done"],"mappings":";;;;;;;;;;AAAA;;;;;IAKqBA,K;;AAEnB;;;AAGA,mBAAc;AAAA;;AAEZ;;;;AAIA,SAAKC,GAAL,GAAWD,MAAME,UAAN,EAAX;;AAEA;;;;AAIA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA;;;;AAIA,SAAKC,OAAL,GAAe,IAAf;;AAEA;;;;AAIA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA;;;;AAIA,SAAKC,eAAL,GAAuB,IAAvB;;AAEA;;;AAGA,SAAKC,KAAL,GAAaP,MAAMO,KAAN,CAAYC,IAAzB;;AAEA;;;AAGA,SAAKC,cAAL,GAAsB,IAAtB;;AAEA;;;AAGA,SAAKC,aAAL,GAAqB,IAArB;AAED;;AAED;;;;;;;wBAGS;AACP,aAAO,KAAKT,GAAZ;AACD;;AAED;;;;;;;iCAIoB;AAClBD,YAAMW,EAAN,IAAY,CAAZ;AACA,aAAOX,MAAMW,EAAb;AACD;;;;;;AAIH;;;;;;kBAxEqBX,K;AA4ErBA,MAAMW,EAAN,GAAW,CAAX;;AAEA;;;;AAIAX,MAAMO,KAAN,GAAc;;AAEZ;;;;AAIAC,QAAM,CANM;;AAQZ;;;;AAIAI,WAAS,CAZG;;AAcZ;;;;AAIAC,UAAQ,CAlBI;;AAoBZ;;;;AAIAC,QAAM;;AAxBM,CAAd","file":"Frame.js","sourcesContent":["/**\r\n * Platform.Frame\r\n *\r\n * Instances of this class should be used in the Platform\r\n */\r\nexport default class Frame {\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n\r\n    /**\r\n     * Frame id to help identify it\r\n     * @type {Number}\r\n     */\r\n    this._id = Frame.generateId();\r\n\r\n    /**\r\n     * The Platform instance this frame belongs to\r\n     * @type {Platform}\r\n     */\r\n    this.platform = null;\r\n\r\n    /**\r\n     * The incoming service-level request\r\n     * @type {Platform.Request}\r\n     */\r\n    this.request = null;\r\n\r\n    /**\r\n     * The finished service-level response\r\n     * @type {Platform.Response}\r\n     */\r\n    this.response = null;\r\n\r\n    /**\r\n     * Object handling the request workflow\r\n     * @type {Platform.PlatformRequest}\r\n     */\r\n    this.platformRequest = null;\r\n\r\n    /**\r\n     * @type {Platform.Frame.state}\r\n     */\r\n    this.state = Frame.state.none;\r\n\r\n    /**\r\n     * @type {Promise}\r\n     */\r\n    this.serviceResolve = null;\r\n\r\n    /**\r\n     * @type {Promise}\r\n     */\r\n    this.serviceReject = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * @return {Number} - frame id number\r\n   */\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * Generates a global id value for a Frame\r\n   * @return {Number} new frame id\r\n   */\r\n  static generateId() {\r\n    Frame.id += 1;\r\n    return Frame.id;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Static id variable to tag Frames with\r\n * @type {Number}\r\n */\r\nFrame.id = 0;\r\n\r\n/**\r\n * Enum of a Frame's possible states\r\n * @type {Object}\r\n */\r\nFrame.state = {\r\n\r\n  /**\r\n   * None or unknown state\r\n   * @type {Number}\r\n   */\r\n  none: 0,\r\n\r\n  /**\r\n   * Waiting for execution\r\n   * @type {Number}\r\n   */\r\n  waiting: 1,\r\n\r\n  /**\r\n   * Actively executing\r\n   * @type {Number}\r\n   */\r\n  active: 2,\r\n\r\n  /**\r\n   * Finished executing\r\n   * @type {Number}\r\n   */\r\n  done: 3\r\n\r\n};\r\n"]}