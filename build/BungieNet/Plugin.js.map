{"version":3,"sources":["../../src/BungieNet/Plugin.js"],"names":["Plugin","CookieJarMemoryPlugin","jar","eventName","e","Platform","events","frameBeforeSend","target","options","OAuthPlugin","accessToken","headers","Authorization"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA;;;;;IAKqBA,M;;;;kBAAAA,M;;;AAIrBA,OAAOC,qBAAP;AAAA;;AAEE;;;AAGA,oBAAc;AAAA;;AAAA;;AAEZ,UAAKC,GAAL,GAAW,kBAAQA,GAAR,EAAX;AAFY;AAGb;;AAED;;;;;;;AAVF;AAAA;AAAA,2BAeSC,SAfT,EAeoBC,CAfpB,EAeuB;AACnB,UAAGD,cAAc,oBAAUE,QAAV,CAAmBC,MAAnB,CAA0BC,eAA3C,EAA4D;AAC1DH,UAAEI,MAAF,CAASC,OAAT,CAAiBP,GAAjB,GAAuB,KAAKA,GAA5B;AACD;AACF;AAnBH;;AAAA;AAAA,EAA6CF,MAA7C;;AAuBAA,OAAOU,WAAP;AAAA;;AAEE;;;AAGA,mBAAYC,WAAZ,EAAyB;AAAA;;AAAA;;AAEvB,WAAKA,WAAL,GAAmBA,WAAnB;AAFuB;AAGxB;;AAED;;;;;;;AAVF;AAAA;AAAA,2BAeSR,SAfT,EAeoBC,CAfpB,EAeuB;AACnB,UAAGD,cAAc,oBAAUE,QAAV,CAAmBC,MAAnB,CAA0BC,eAA3C,EAA4D;AAC1DH,UAAEI,MAAF,CAASC,OAAT,CAAiBG,OAAjB,CAAyBC,aAAzB,eAAoD,KAAKF,WAAzD;AACD;AACF;AAnBH;;AAAA;AAAA,EAAmCX,MAAnC","file":"Plugin.js","sourcesContent":["import request from \"request\";\r\nimport BungieNet from \"./BungieNet.js\";\r\n\r\n/**\r\n * Plugin base class for plugins. Each plugin MUST define an update method.\r\n *\r\n * void update( String: eventName, Array: args )\r\n */\r\nexport default class Plugin {\r\n\r\n}\r\n\r\nPlugin.CookieJarMemoryPlugin = class extends Plugin {\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.jar = request.jar();\r\n  }\r\n\r\n  /**\r\n   * @param {String} eventName -\r\n   * @param {Object} e -\r\n   * @return {undefined}\r\n   */\r\n  update(eventName, e) {\r\n    if(eventName === BungieNet.Platform.events.frameBeforeSend) {\r\n      e.target.options.jar = this.jar;\r\n    }\r\n  }\r\n\r\n};\r\n\r\nPlugin.OAuthPlugin = class extends Plugin {\r\n\r\n  /**\r\n   * @param {String} accessToken - oauth access token\r\n   */\r\n  constructor(accessToken) {\r\n    super();\r\n    this.accessToken = accessToken;\r\n  }\r\n\r\n  /**\r\n   * @param {String} eventName -\r\n   * @param {Object} e -\r\n   * @return {undefined}\r\n   */\r\n  update(eventName, e) {\r\n    if(eventName === BungieNet.Platform.events.frameBeforeSend) {\r\n      e.target.options.headers.Authorization = `Bearer ${ this.accessToken }`;\r\n    }\r\n  }\r\n\r\n};\r\n"]}